,notebook,cell_id,lineno,end_lineno,col_offset,end_col_offset,type,type_details,output_type,effect_type,code
0,hmwk01.ipynb,19,1,1,12,72,Call1,dropna,internal,enforcing,"dfTiDirt.dropna(subset=[""Survived"", ""Pclass"", ""Age"", ""Sex""])"
1,hmwk01.ipynb,19,1,1,12,79,Call1,copy,internal,checking,"dfTiDirt.dropna(subset=[""Survived"", ""Pclass"", ""Age"", ""Sex""]).copy()"
2,hmwk01.ipynb,21,1,1,18,111,Call1,count,internal,checking,"dfTitanic.loc[(dfTiDirt[""Survived""] == 1) & (dfTitanic[""Pclass""] == 1), [""Survived""]].count()"
3,hmwk01.ipynb,21,1,1,114,175,Call1,count,internal,checking,"dfTitanic.loc[dfTitanic[""Pclass""] == 1, [""Survived""]].count()"
4,hmwk01.ipynb,21,2,2,19,112,Call1,count,internal,checking,"dfTitanic.loc[(dfTiDirt[""Survived""] == 1) & (dfTitanic[""Pclass""] == 2), [""Survived""]].count()"
5,hmwk01.ipynb,21,2,2,115,176,Call1,count,internal,checking,"dfTitanic.loc[dfTitanic[""Pclass""] == 2, [""Survived""]].count()"
6,hmwk01.ipynb,21,3,3,18,111,Call1,count,internal,checking,"dfTitanic.loc[(dfTiDirt[""Survived""] == 1) & (dfTitanic[""Pclass""] == 3), [""Survived""]].count()"
7,hmwk01.ipynb,21,3,3,114,175,Call1,count,internal,checking,"dfTitanic.loc[dfTitanic[""Pclass""] == 3, [""Survived""]].count()"
8,hmwk01.ipynb,24,1,1,19,144,Call1,count,internal,checking,"dfTitanic.loc[(dfTitanic[""Survived""] == 1) & (dfTitanic[""Pclass""] == 1) & (dfTitanic[""Sex""] == ""male""), [""Survived""]].count()"
9,hmwk01.ipynb,24,1,1,147,241,Call1,count,internal,checking,"dfTitanic.loc[(dfTitanic[""Pclass""] == 1) & (dfTitanic[""Sex""] == ""male""), [""Survived""]].count()"
10,hmwk01.ipynb,24,2,2,19,146,Call1,count,internal,checking,"dfTitanic.loc[(dfTitanic[""Survived""] == 1) & (dfTitanic[""Pclass""] == 1) & (dfTitanic[""Sex""] == ""female""), [""Survived""]].count()"
11,hmwk01.ipynb,24,2,2,149,245,Call1,count,internal,checking,"dfTitanic.loc[(dfTitanic[""Pclass""] == 1) & (dfTitanic[""Sex""] == ""female""), [""Survived""]].count()"
12,hmwk01.ipynb,24,3,3,20,145,Call1,count,internal,checking,"dfTitanic.loc[(dfTitanic[""Survived""] == 1) & (dfTitanic[""Pclass""] == 2) & (dfTitanic[""Sex""] == ""male""), [""Survived""]].count()"
13,hmwk01.ipynb,24,3,3,148,242,Call1,count,internal,checking,"dfTitanic.loc[(dfTitanic[""Pclass""] == 2) & (dfTitanic[""Sex""] == ""male""), [""Survived""]].count()"
14,hmwk01.ipynb,24,4,4,20,147,Call1,count,internal,checking,"dfTitanic.loc[(dfTitanic[""Survived""] == 1) & (dfTitanic[""Pclass""] == 2) & (dfTitanic[""Sex""] == ""female""), [""Survived""]].count()"
15,hmwk01.ipynb,24,4,4,150,246,Call1,count,internal,checking,"dfTitanic.loc[(dfTitanic[""Pclass""] == 2) & (dfTitanic[""Sex""] == ""female""), [""Survived""]].count()"
16,hmwk01.ipynb,24,5,5,19,144,Call1,count,internal,checking,"dfTitanic.loc[(dfTitanic[""Survived""] == 1) & (dfTitanic[""Pclass""] == 3) & (dfTitanic[""Sex""] == ""male""), [""Survived""]].count()"
17,hmwk01.ipynb,24,5,5,147,241,Call1,count,internal,checking,"dfTitanic.loc[(dfTitanic[""Pclass""] == 3) & (dfTitanic[""Sex""] == ""male""), [""Survived""]].count()"
18,hmwk01.ipynb,24,6,6,19,146,Call1,count,internal,checking,"dfTitanic.loc[(dfTitanic[""Survived""] == 1) & (dfTitanic[""Pclass""] == 3) & (dfTitanic[""Sex""] == ""female""), [""Survived""]].count()"
19,hmwk01.ipynb,24,6,6,149,245,Call1,count,internal,checking,"dfTitanic.loc[(dfTitanic[""Pclass""] == 3) & (dfTitanic[""Sex""] == ""female""), [""Survived""]].count()"
20,hmwk01.ipynb,27,3,3,6,33,Call1,describe,revealing,checking,"dfTitanic[""Age""].describe()"
21,hmwk01.ipynb,30,1,1,0,93,Assign1,,internal,checking,"dfTiFeSurvived = dfTitanic.loc[(dfTitanic[""Sex""] == ""female"") & (dfTitanic[""Survived""] == 1)]"
22,hmwk01.ipynb,30,2,2,0,89,Assign1,,internal,checking,"dfTiFeDied = dfTitanic.loc[(dfTitanic[""Sex""] == ""female"") & (dfTitanic[""Survived""] == 0)]"
23,hmwk01.ipynb,30,3,3,128,156,Call1,mean,internal,checking,"dfTiFeSurvived[""Age""].mean()"
24,hmwk01.ipynb,30,3,3,190,214,Call1,mean,internal,checking,"dfTiFeDied[""Age""].mean()"
25,hmwk01.ipynb,37,1,1,0,206,Assign1,,internal,checking,"dfBabies = dfBabyDirt[(dfBabyDirt[""bwt""] != 999) & (dfBabyDirt[""gestation""] != 999) & (dfBabyDirt[""parity""] != 9) & (dfBabyDirt[""height""] != 99) & (dfBabyDirt[""weight""] != 999) & (dfBabyDirt[""smoke""] != 9)]"
26,hmwk01.ipynb,39,3,3,0,34,Subscript1,,internal,enforcing,"dfBabies.loc[dfBabies[""smoke""]==0]"
27,hmwk01.ipynb,39,10,10,0,34,Subscript1,,internal,enforcing,"dfBabies.loc[dfBabies[""smoke""]==1]"
28,hmwk01.ipynb,43,1,1,12,46,Subscript1,,internal,enforcing,"dfBabies.loc[dfBabies[""smoke""]==1]"
29,hmwk01.ipynb,43,1,1,12,63,Call1,mean,internal,checking,"dfBabies.loc[dfBabies[""smoke""]==1][""weight""].mean()"
30,hmwk01.ipynb,43,2,2,14,48,Subscript1,,internal,enforcing,"dfBabies.loc[dfBabies[""smoke""]==1]"
31,hmwk01.ipynb,43,3,3,13,64,Call1,mean,internal,checking,"dfBabies.loc[dfBabies[""smoke""]==0][""weight""].mean()"
32,hmwk01.ipynb,43,3,3,13,47,Subscript1,,internal,enforcing,"dfBabies.loc[dfBabies[""smoke""]==0]"
33,hmwk01.ipynb,43,4,4,15,49,Subscript1,,internal,enforcing,"dfBabies.loc[dfBabies[""smoke""]==0]"
34,hmwk01.ipynb,50,9,9,14,65,Call1,dropna,internal,enforcing,"df.dropna(subset=[""STATE"", ""D"", ""GENERAL PERCENT""])"
35,hmwk01.ipynb,50,9,9,14,72,Call1,copy,internal,checking,"df.dropna(subset=[""STATE"", ""D"", ""GENERAL PERCENT""]).copy()"
36,hmwk01.ipynb,50,12,12,8,29,Assign1,,internal,checking,row = dfClean.iloc[i]
37,hmwk01.ipynb,50,13,13,8,94,Assign2,,internal,enforcing,"row[""GENERAL PERCENT""] = np.float(row[""GENERAL PERCENT""].strip(""%"").replace("","", "".""))"
38,hmwk01.ipynb,50,13,13,42,93,Call1,replace,internal,enforcing,"row[""GENERAL PERCENT""].strip(""%"").replace("","", ""."")"
39,hmwk01.ipynb,50,14,14,11,43,Call1,isnull,internal,checking,"pd.isnull(row[""CANDIDATE NAME""])"
40,hmwk01.ipynb,50,15,15,15,54,Call1,isnull,internal,checking,"pd.isnull(row[""CANDIDATE NAME (Last)""])"
41,hmwk01.ipynb,50,16,16,16,49,Assign2,,internal,enforcing,"row[""CANDIDATE NAME""] = ""UNKNOWN"""
42,hmwk01.ipynb,50,18,18,16,68,Assign1,,internal,checking,"row[""CANDIDATE NAME""] = row[""CANDIDATE NAME (Last)""]"
43,hmwk01.ipynb,50,18,18,16,68,Assign2,,internal,enforcing,"row[""CANDIDATE NAME""] = row[""CANDIDATE NAME (Last)""]"
44,hmwk01.ipynb,50,20,20,4,74,Assign1,,internal,checking,"dfClean = dfClean[[""STATE"", ""D"", ""CANDIDATE NAME"", ""GENERAL PERCENT""]]"
45,hmwk01.ipynb,52,6,6,8,29,Assign1,,internal,checking,row = dfClean.iloc[i]
46,hmwk01.ipynb,52,7,7,8,89,Assign1,,internal,checking,"district = dfNew.loc[(dfNew[""STATE""] == row[""STATE""]) & (dfNew[""D""] == row[""D""])]"
47,hmwk01.ipynb,52,10,10,12,39,Assign1,,internal,checking,"dfRow = row[[""STATE"", ""D""]]"
48,hmwk01.ipynb,52,11,11,12,51,Assign1,,internal,checking,"dfRow[""WINNER""] = row[""CANDIDATE NAME""]"
49,hmwk01.ipynb,52,11,11,12,51,Assign2,,internal,enforcing,"dfRow[""WINNER""] = row[""CANDIDATE NAME""]"
50,hmwk01.ipynb,52,12,12,12,33,Assign2,,internal,enforcing,"dfRow[""MARGIN""] = 100"
51,hmwk01.ipynb,52,13,13,12,52,Assign2,,internal,enforcing,"dfRow[""WINPER""] = row[""GENERAL PERCENT""]"
52,hmwk01.ipynb,52,13,13,12,52,Assign1,,internal,checking,"dfRow[""WINPER""] = row[""GENERAL PERCENT""]"
53,hmwk01.ipynb,52,16,16,12,81,Assign1,,internal,checking,"(Margin, WinPer) = dfNew.loc[district.index[0], ['MARGIN', 'WINPER']]"
54,hmwk01.ipynb,52,18,18,16,79,Assign3,loc,internal,enforcing,"dfNew.loc[district.index[0], 'WINPER'] = row[""GENERAL PERCENT""]"
55,hmwk01.ipynb,52,18,18,16,79,Assign1,,internal,checking,"dfNew.loc[district.index[0], 'WINPER'] = row[""GENERAL PERCENT""]"
56,hmwk01.ipynb,52,20,20,16,88,Assign3,loc,internal,enforcing,"dfNew.loc[district.index[0], 'MARGIN'] = WinPer - row[""GENERAL PERCENT""]"
57,hmwk01.ipynb,52,22,22,12,42,Call1,sort_values,internal,enforcing,dfNew.sort_values(by='MARGIN')
58,hmwk01.ipynb,52,23,23,4,52,Call1,drop,internal,enforcing,"dfNew.drop(['WINPER'], axis = 1, inplace = True)"
59,customer_segments.ipynb,4,2,2,8,23,Call1,describe,revealing,checking,data.describe()
60,customer_segments.ipynb,6,2,2,18,29,Call1,mean,internal,checking,data.mean()
61,customer_segments.ipynb,9,2,2,18,32,Call1,copy,internal,checking,samples.copy()
62,customer_segments.ipynb,9,3,3,0,54,Assign2,,internal,enforcing,samples_w_total['Total'] = samples_w_total.sum(axis=1)
63,customer_segments.ipynb,9,5,5,0,60,Assign2,,internal,enforcing,samples_percentage['Total'] = samples_percentage.sum(axis=1)
64,customer_segments.ipynb,9,6,6,0,18,Expr1,,revealing,checking,samples_percentage
65,customer_segments.ipynb,13,2,2,11,22,Call1,copy,internal,checking,data.copy()
66,customer_segments.ipynb,13,4,4,8,46,Call1,drop,internal,enforcing,"new_data.drop(column_to_study, axis=1)"
67,customer_segments.ipynb,13,5,5,0,29,Assign1,,internal,checking,y_all = data[column_to_study]
68,customer_segments.ipynb,55,7,7,11,84,Call1,concat,internal,enforcing,"pd.concat([df_diffs, pd.Series(sample_preds, name='PREDICTION')], axis=1)"
69,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,3,2,2,7,24,Call2,columns,internal,checking,len(data.columns)
70,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,5,2,2,0,21,Assign2,,internal,enforcing,"data[""Margalef""] = """""
71,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,6,3,3,4,142,Assign3,loc,internal,enforcing,"data.loc[i,'Margalef'] = (len(data.iloc[i][4:last][data.iloc[i][4:last]>0])-1)/math.log(sum(data.iloc[i][4:last][data.iloc[i][4:last]>0]))"
72,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,6,3,3,34,78,Subscript1,,internal,enforcing,data.iloc[i][4:last][data.iloc[i][4:last]>0]
73,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,6,3,3,96,140,Subscript1,,internal,enforcing,data.iloc[i][4:last][data.iloc[i][4:last]>0]
74,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,8,2,2,11,33,Call1,unique,internal,checking,data.RiverSeg.unique()
75,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,9,2,2,0,29,Assign1,,internal,checking,"river = data.iloc[0][""River""]"
76,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,10,9,9,4,49,Assign1,,internal,checking,segDF = data.loc[data['RiverSeg'] == segment]
77,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,10,9,9,12,49,Subscript1,,internal,enforcing,data.loc[data['RiverSeg'] == segment]
78,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,10,10,10,4,38,Assign1,,internal,checking,"segDF = segDF[segDF[""Margalef""]>0]"
79,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,10,10,10,12,38,Subscript1,,internal,enforcing,"segDF[segDF[""Margalef""]>0]"
80,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,10,13,13,12,37,Call1,sort_values,internal,enforcing,segDF.sort_values('Year')
81,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,10,15,15,4,21,Assign1,,internal,checking,"x = segDF[""Year""]"
82,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,10,16,16,4,25,Assign1,,internal,checking,"y = segDF[""Margalef""]"
83,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,11,2,2,0,18,Assign2,,internal,enforcing,"data[""SWI_2""] = """""
84,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,12,6,6,41,85,Subscript1,,internal,enforcing,data.iloc[i][4:last][data.iloc[i][4:last]>0]
85,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,12,6,6,120,164,Subscript1,,internal,enforcing,data.iloc[i][4:last][data.iloc[i][4:last]>0]
86,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,12,7,7,4,29,Assign3,loc,internal,enforcing,"data.loc[i,'SWI_2'] = swi"
87,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,14,8,8,4,49,Assign1,,internal,checking,segDF = data.loc[data['RiverSeg'] == segment]
88,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,14,8,8,12,49,Subscript1,,internal,enforcing,data.loc[data['RiverSeg'] == segment]
89,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,14,9,9,4,35,Assign1,,internal,checking,"segDF = segDF[segDF[""SWI_2""]>0]"
90,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,14,9,9,12,35,Subscript1,,internal,enforcing,"segDF[segDF[""SWI_2""]>0]"
91,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,14,12,12,12,37,Call1,sort_values,internal,enforcing,segDF.sort_values('Year')
92,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,14,14,14,4,21,Assign1,,internal,checking,"x = segDF[""Year""]"
93,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,14,15,15,4,22,Assign1,,internal,checking,"y = segDF[""SWI_2""]"
94,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,15,2,2,0,18,Assign2,,internal,enforcing,"data[""SWI_e""] = """""
95,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,16,6,6,41,85,Subscript1,,internal,enforcing,data.iloc[i][4:last][data.iloc[i][4:last]>0]
96,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,16,6,6,120,164,Subscript1,,internal,enforcing,data.iloc[i][4:last][data.iloc[i][4:last]>0]
97,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,16,7,7,4,29,Assign3,loc,internal,enforcing,"data.loc[i,'SWI_e'] = swi"
98,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,18,8,8,4,49,Assign1,,internal,checking,segDF = data.loc[data['RiverSeg'] == segment]
99,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,18,8,8,12,49,Subscript1,,internal,enforcing,data.loc[data['RiverSeg'] == segment]
100,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,18,9,9,4,35,Assign1,,internal,checking,"segDF = segDF[segDF[""SWI_e""]>0]"
101,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,18,9,9,12,35,Subscript1,,internal,enforcing,"segDF[segDF[""SWI_e""]>0]"
102,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,18,12,12,12,37,Call1,sort_values,internal,enforcing,segDF.sort_values('Year')
103,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,18,14,14,4,21,Assign1,,internal,checking,"x = segDF[""Year""]"
104,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,18,15,15,4,22,Assign1,,internal,checking,"y = segDF[""SWI_e""]"
105,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,19,2,2,0,19,Assign2,,internal,enforcing,"data[""SWI_10""] = """""
106,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,20,6,6,41,85,Subscript1,,internal,enforcing,data.iloc[i][4:last][data.iloc[i][4:last]>0]
107,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,20,6,6,120,164,Subscript1,,internal,enforcing,data.iloc[i][4:last][data.iloc[i][4:last]>0]
108,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,20,7,7,4,30,Assign3,loc,internal,enforcing,"data.loc[i,'SWI_10'] = swi"
109,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,22,8,8,4,49,Assign1,,internal,checking,segDF = data.loc[data['RiverSeg'] == segment]
110,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,22,8,8,12,49,Subscript1,,internal,enforcing,data.loc[data['RiverSeg'] == segment]
111,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,22,9,9,4,36,Assign1,,internal,checking,"segDF = segDF[segDF[""SWI_10""]>0]"
112,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,22,9,9,12,36,Subscript1,,internal,enforcing,"segDF[segDF[""SWI_10""]>0]"
113,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,22,12,12,12,37,Call1,sort_values,internal,enforcing,segDF.sort_values('Year')
114,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,22,14,14,4,21,Assign1,,internal,checking,"x = segDF[""Year""]"
115,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,22,15,15,4,23,Assign1,,internal,checking,"y = segDF[""SWI_10""]"
116,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,23,2,2,0,16,Assign2,,internal,enforcing,"data[""lam""] = """""
117,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,24,11,11,4,27,Assign3,loc,internal,enforcing,"data.loc[i,'lam'] = lam"
118,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,26,8,8,4,49,Assign1,,internal,checking,segDF = data.loc[data['RiverSeg'] == segment]
119,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,26,8,8,12,49,Subscript1,,internal,enforcing,data.loc[data['RiverSeg'] == segment]
120,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,26,9,9,4,33,Assign1,,internal,checking,"segDF = segDF[segDF[""lam""]>0]"
121,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,26,9,9,12,33,Subscript1,,internal,enforcing,"segDF[segDF[""lam""]>0]"
122,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,26,12,12,12,37,Call1,sort_values,internal,enforcing,segDF.sort_values('Year')
123,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,26,14,14,4,21,Assign1,,internal,checking,"x = segDF[""Year""]"
124,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,26,15,15,4,20,Assign1,,internal,checking,"y = segDF[""lam""]"
125,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,27,2,2,0,18,Assign2,,internal,enforcing,"data[""1-lam""] = """""
126,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,28,11,11,4,33,Assign3,loc,internal,enforcing,"data.loc[i,'1-lam'] = 1 - lam"
127,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,30,8,8,4,49,Assign1,,internal,checking,segDF = data.loc[data['RiverSeg'] == segment]
128,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,30,8,8,12,49,Subscript1,,internal,enforcing,data.loc[data['RiverSeg'] == segment]
129,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,30,9,9,4,35,Assign1,,internal,checking,"segDF = segDF[segDF[""1-lam""]>0]"
130,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,30,9,9,12,35,Subscript1,,internal,enforcing,"segDF[segDF[""1-lam""]>0]"
131,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,30,12,12,12,37,Call1,sort_values,internal,enforcing,segDF.sort_values('Year')
132,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,30,14,14,4,21,Assign1,,internal,checking,"x = segDF[""Year""]"
133,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,30,15,15,4,22,Assign1,,internal,checking,"y = segDF[""1-lam""]"
134,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,31,2,2,0,17,Assign2,,internal,enforcing,"data[""lam'""] = """""
135,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,32,9,9,4,32,Assign1,,internal,checking,array = data.iloc[i][4:last]
136,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,32,14,14,4,28,Assign3,loc,internal,enforcing,"data.loc[i,""lam'""] = lam"
137,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,34,8,8,4,49,Assign1,,internal,checking,segDF = data.loc[data['RiverSeg'] == segment]
138,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,34,8,8,12,49,Subscript1,,internal,enforcing,data.loc[data['RiverSeg'] == segment]
139,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,34,9,9,4,34,Assign1,,internal,checking,"segDF = segDF[segDF[""lam'""]>0]"
140,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,34,9,9,12,34,Subscript1,,internal,enforcing,"segDF[segDF[""lam'""]>0]"
141,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,34,12,12,12,37,Call1,sort_values,internal,enforcing,segDF.sort_values('Year')
142,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,34,14,14,4,21,Assign1,,internal,checking,"x = segDF[""Year""]"
143,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,34,15,15,4,21,Assign1,,internal,checking,"y = segDF[""lam'""]"
144,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,35,2,2,0,19,Assign2,,internal,enforcing,"data[""1-lam'""] = """""
145,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,36,9,9,4,32,Assign1,,internal,checking,array = data.iloc[i][4:last]
146,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,36,14,14,4,34,Assign3,loc,internal,enforcing,"data.loc[i,""1-lam'""] = 1 - lam"
147,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,38,8,8,4,49,Assign1,,internal,checking,segDF = data.loc[data['RiverSeg'] == segment]
148,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,38,8,8,12,49,Subscript1,,internal,enforcing,data.loc[data['RiverSeg'] == segment]
149,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,38,9,9,4,34,Assign1,,internal,checking,"segDF = segDF[segDF[""lam'""]>0]"
150,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,38,9,9,12,34,Subscript1,,internal,enforcing,"segDF[segDF[""lam'""]>0]"
151,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,38,11,11,12,37,Call1,sort_values,internal,enforcing,segDF.sort_values('Year')
152,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,38,13,13,4,21,Assign1,,internal,checking,"x = segDF[""Year""]"
153,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,38,14,14,4,23,Assign1,,internal,checking,"y = segDF[""1-lam'""]"
154,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,39,1,1,0,15,Assign2,,internal,enforcing,"data[""N1""] = """""
155,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,40,6,6,40,84,Subscript1,,internal,enforcing,data.iloc[i][4:last][data.iloc[i][4:last]>0]
156,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,40,6,6,119,163,Subscript1,,internal,enforcing,data.iloc[i][4:last][data.iloc[i][4:last]>0]
157,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,40,7,7,4,35,Assign3,loc,internal,enforcing,"data.loc[i,'N1'] = math.exp(N1)"
158,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,42,8,8,4,49,Assign1,,internal,checking,segDF = data.loc[data['RiverSeg'] == segment]
159,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,42,8,8,12,49,Subscript1,,internal,enforcing,data.loc[data['RiverSeg'] == segment]
160,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,42,9,9,4,34,Assign1,,internal,checking,"segDF = segDF[segDF[""lam'""]>0]"
161,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,42,9,9,12,34,Subscript1,,internal,enforcing,"segDF[segDF[""lam'""]>0]"
162,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,42,12,12,12,37,Call1,sort_values,internal,enforcing,segDF.sort_values('Year')
163,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,42,14,14,4,21,Assign1,,internal,checking,"x = segDF[""Year""]"
164,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,42,15,15,4,19,Assign1,,internal,checking,"y = segDF[""N1""]"
165,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,43,2,2,0,15,Assign2,,internal,enforcing,"data[""N2""] = """""
166,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,44,11,11,4,28,Assign3,loc,internal,enforcing,"data.loc[i,'N2'] = 1/lam"
167,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,46,8,8,4,49,Assign1,,internal,checking,segDF = data.loc[data['RiverSeg'] == segment]
168,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,46,8,8,12,49,Subscript1,,internal,enforcing,data.loc[data['RiverSeg'] == segment]
169,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,46,9,9,4,34,Assign1,,internal,checking,"segDF = segDF[segDF[""lam'""]>0]"
170,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,46,9,9,12,34,Subscript1,,internal,enforcing,"segDF[segDF[""lam'""]>0]"
171,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,46,12,12,12,37,Call1,sort_values,internal,enforcing,segDF.sort_values('Year')
172,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,46,14,14,4,21,Assign1,,internal,checking,"x = segDF[""Year""]"
173,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,46,15,15,4,19,Assign1,,internal,checking,"y = segDF[""N2""]"
174,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,47,2,2,0,18,Assign2,,internal,enforcing,"data[""N_Inf""] = """""
175,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,48,10,10,4,32,Assign1,,internal,checking,array = data.iloc[i][4:last]
176,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,48,11,11,4,42,Assign3,loc,internal,enforcing,"data.loc[i,'N_Inf'] = 1/(max(array)/N)"
177,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,50,8,8,4,49,Assign1,,internal,checking,segDF = data.loc[data['RiverSeg'] == segment]
178,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,50,8,8,12,49,Subscript1,,internal,enforcing,data.loc[data['RiverSeg'] == segment]
179,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,50,9,9,4,34,Assign1,,internal,checking,"segDF = segDF[segDF[""lam'""]>0]"
180,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,50,9,9,12,34,Subscript1,,internal,enforcing,"segDF[segDF[""lam'""]>0]"
181,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,50,12,12,12,37,Call1,sort_values,internal,enforcing,segDF.sort_values('Year')
182,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,50,14,14,4,21,Assign1,,internal,checking,"x = segDF[""Year""]"
183,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,50,15,15,4,22,Assign1,,internal,checking,"y = segDF[""N_Inf""]"
184,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,51,2,2,0,16,Assign2,,internal,enforcing,"data[""N10""] = """""
185,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,52,6,6,41,85,Subscript1,,internal,enforcing,data.iloc[i][4:last][data.iloc[i][4:last]>0]
186,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,52,6,6,120,164,Subscript1,,internal,enforcing,data.iloc[i][4:last][data.iloc[i][4:last]>0]
187,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,52,7,7,4,87,Assign3,loc,internal,enforcing,"data.loc[i,'N10'] = math.exp(swi)/len(data.iloc[i][4:last][data.iloc[i][4:last]>0])"
188,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,52,7,7,42,86,Subscript1,,internal,enforcing,data.iloc[i][4:last][data.iloc[i][4:last]>0]
189,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,54,9,9,4,49,Assign1,,internal,checking,segDF = data.loc[data['RiverSeg'] == segment]
190,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,54,9,9,12,49,Subscript1,,internal,enforcing,data.loc[data['RiverSeg'] == segment]
191,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,54,10,10,4,34,Assign1,,internal,checking,"segDF = segDF[segDF[""lam'""]>0]"
192,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,54,10,10,12,34,Subscript1,,internal,enforcing,"segDF[segDF[""lam'""]>0]"
193,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,54,13,13,12,37,Call1,sort_values,internal,enforcing,segDF.sort_values('Year')
194,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,54,15,15,4,21,Assign1,,internal,checking,"x = segDF[""Year""]"
195,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,54,16,16,4,20,Assign1,,internal,checking,"y = segDF[""N10""]"
196,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,55,2,2,0,17,Assign2,,internal,enforcing,"data[""N10'""] = """""
197,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,56,6,6,41,85,Subscript1,,internal,enforcing,data.iloc[i][4:last][data.iloc[i][4:last]>0]
198,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,56,6,6,120,164,Subscript1,,internal,enforcing,data.iloc[i][4:last][data.iloc[i][4:last]>0]
199,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,56,8,8,8,100,Assign3,loc,internal,enforcing,"data.loc[i,""N10'""] = (math.exp(swi)-1)/(len(data.iloc[i][4:last][data.iloc[i][4:last]>0])-1)"
200,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,56,8,8,52,96,Subscript1,,internal,enforcing,data.iloc[i][4:last][data.iloc[i][4:last]>0]
201,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,56,10,10,8,30,Assign3,loc,internal,enforcing,"data.loc[i,""N10'""] = 0"
202,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,58,8,8,4,49,Assign1,,internal,checking,segDF = data.loc[data['RiverSeg'] == segment]
203,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,58,8,8,12,49,Subscript1,,internal,enforcing,data.loc[data['RiverSeg'] == segment]
204,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,58,9,9,4,34,Assign1,,internal,checking,"segDF = segDF[segDF[""lam'""]>0]"
205,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,58,9,9,12,34,Subscript1,,internal,enforcing,"segDF[segDF[""lam'""]>0]"
206,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,58,12,12,12,37,Call1,sort_values,internal,enforcing,segDF.sort_values('Year')
207,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,58,14,14,4,21,Assign1,,internal,checking,"x = segDF[""Year""]"
208,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,58,15,15,4,21,Assign1,,internal,checking,"y = segDF[""N10'""]"
209,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,59,2,2,0,16,Assign2,,internal,enforcing,"data[""N21""] = """""
210,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,60,16,16,41,85,Subscript1,,internal,enforcing,data.iloc[i][4:last][data.iloc[i][4:last]>0]
211,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,60,16,16,120,164,Subscript1,,internal,enforcing,data.iloc[i][4:last][data.iloc[i][4:last]>0]
212,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,60,19,19,4,29,Assign3,loc,internal,enforcing,"data.loc[i,""N21""] = N2/N1"
213,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,62,8,8,4,49,Assign1,,internal,checking,segDF = data.loc[data['RiverSeg'] == segment]
214,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,62,8,8,12,49,Subscript1,,internal,enforcing,data.loc[data['RiverSeg'] == segment]
215,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,62,9,9,4,34,Assign1,,internal,checking,"segDF = segDF[segDF[""lam'""]>0]"
216,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,62,9,9,12,34,Subscript1,,internal,enforcing,"segDF[segDF[""lam'""]>0]"
217,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,62,12,12,12,37,Call1,sort_values,internal,enforcing,segDF.sort_values('Year')
218,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,62,14,14,4,21,Assign1,,internal,checking,"x = segDF[""Year""]"
219,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,62,15,15,4,20,Assign1,,internal,checking,"y = segDF[""N21""]"
220,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,63,2,2,0,17,Assign2,,internal,enforcing,"data[""N21'""] = """""
221,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,64,17,17,41,85,Subscript1,,internal,enforcing,data.iloc[i][4:last][data.iloc[i][4:last]>0]
222,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,64,17,17,120,164,Subscript1,,internal,enforcing,data.iloc[i][4:last][data.iloc[i][4:last]>0]
223,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,64,21,21,4,38,Assign3,loc,internal,enforcing,"data.loc[i,""N21'""] = (N2-1)/(N1-1)"
224,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,66,8,8,4,49,Assign1,,internal,checking,segDF = data.loc[data['RiverSeg'] == segment]
225,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,66,8,8,12,49,Subscript1,,internal,enforcing,data.loc[data['RiverSeg'] == segment]
226,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,66,9,9,4,34,Assign1,,internal,checking,"segDF = segDF[segDF[""lam'""]>0]"
227,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,66,9,9,12,34,Subscript1,,internal,enforcing,"segDF[segDF[""lam'""]>0]"
228,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,66,12,12,12,37,Call1,sort_values,internal,enforcing,segDF.sort_values('Year')
229,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,66,14,14,4,21,Assign1,,internal,checking,"x = segDF[""Year""]"
230,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,66,15,15,4,21,Assign1,,internal,checking,"y = segDF[""N21'""]"
231,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,67,2,2,0,19,Assign2,,internal,enforcing,"data[""Pielou""] = """""
232,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,68,14,14,41,85,Subscript1,,internal,enforcing,data.iloc[i][4:last][data.iloc[i][4:last]>0]
233,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,68,14,14,120,164,Subscript1,,internal,enforcing,data.iloc[i][4:last][data.iloc[i][4:last]>0]
234,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,68,17,17,4,46,Assign3,loc,internal,enforcing,"data.loc[i,'Pielou'] = swi/math.log(count)"
235,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,70,8,8,4,49,Assign1,,internal,checking,segDF = data.loc[data['RiverSeg'] == segment]
236,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,70,8,8,12,49,Subscript1,,internal,enforcing,data.loc[data['RiverSeg'] == segment]
237,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,70,9,9,4,34,Assign1,,internal,checking,"segDF = segDF[segDF[""lam'""]>0]"
238,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,70,9,9,12,34,Subscript1,,internal,enforcing,"segDF[segDF[""lam'""]>0]"
239,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,70,12,12,12,37,Call1,sort_values,internal,enforcing,segDF.sort_values('Year')
240,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,70,14,14,4,21,Assign1,,internal,checking,"x = segDF[""Year""]"
241,Large_River_Monitoring_Forum_Biodiversity_Indices_Analysis.ipynb,70,15,15,4,23,Assign1,,internal,checking,"y = segDF[""Pielou""]"
242,ml_analysis.ipynb,1,3,3,4,126,Call1,drop,internal,enforcing,"modeling_df.drop(['DATE', 'HourlySkyConditions', 'REPORT_TYPE', 'join_time', 'actual_weather_delay', 'avg_delay'], axis=1)"
243,ml_analysis.ipynb,1,9,9,36,61,Call2,shape,internal,checking,str(train_features.shape)
244,ml_analysis.ipynb,1,10,10,35,59,Call2,shape,internal,checking,str(test_features.shape)
245,ml_analysis.ipynb,1,11,11,36,60,Call2,shape,internal,checking,str(train_outcome.shape)
246,ml_analysis.ipynb,1,12,12,35,58,Call2,shape,internal,checking,str(test_outcome.shape)
247,boston_model.ipynb,3,4,4,0,14,Expr3,columns,revealing,checking,boston.columns
248,boston_model.ipynb,5,7,7,12,50,Call1,concat,internal,enforcing,"pd.concat([boston, boston_mf], axis=1)"
249,boston_model.ipynb,5,9,9,0,18,Call1,head,revealing,checking,boston_join.head()
250,boston_model.ipynb,6,1,1,0,19,Expr3,columns,revealing,checking,boston_join.columns
251,boston_model.ipynb,7,11,11,0,66,Assign2,,internal,enforcing,boston_join['5K Duration'] = boston_join['5K'].apply(time_convert)
252,boston_model.ipynb,7,11,11,29,66,Call1,apply,internal,enforcing,boston_join['5K'].apply(time_convert)
253,boston_model.ipynb,7,12,12,0,68,Assign2,,internal,enforcing,boston_join['10K Duration'] = boston_join['10K'].apply(time_convert)
254,boston_model.ipynb,7,12,12,30,68,Call1,apply,internal,enforcing,boston_join['10K'].apply(time_convert)
255,boston_model.ipynb,7,13,13,0,68,Assign2,,internal,enforcing,boston_join['15K Duration'] = boston_join['15K'].apply(time_convert)
256,boston_model.ipynb,7,13,13,30,68,Call1,apply,internal,enforcing,boston_join['15K'].apply(time_convert)
257,boston_model.ipynb,7,14,14,0,68,Assign2,,internal,enforcing,boston_join['20K Duration'] = boston_join['20K'].apply(time_convert)
258,boston_model.ipynb,7,14,14,30,68,Call1,apply,internal,enforcing,boston_join['20K'].apply(time_convert)
259,boston_model.ipynb,7,15,15,0,70,Assign2,,internal,enforcing,boston_join['Half Duration'] = boston_join['Half'].apply(time_convert)
260,boston_model.ipynb,7,15,15,31,70,Call1,apply,internal,enforcing,boston_join['Half'].apply(time_convert)
261,boston_model.ipynb,7,16,16,0,68,Assign2,,internal,enforcing,boston_join['25K Duration'] = boston_join['25K'].apply(time_convert)
262,boston_model.ipynb,7,16,16,30,68,Call1,apply,internal,enforcing,boston_join['25K'].apply(time_convert)
263,boston_model.ipynb,7,17,17,0,68,Assign2,,internal,enforcing,boston_join['30K Duration'] = boston_join['30K'].apply(time_convert)
264,boston_model.ipynb,7,17,17,30,68,Call1,apply,internal,enforcing,boston_join['30K'].apply(time_convert)
265,boston_model.ipynb,7,18,18,0,68,Assign2,,internal,enforcing,boston_join['35K Duration'] = boston_join['35K'].apply(time_convert)
266,boston_model.ipynb,7,18,18,30,68,Call1,apply,internal,enforcing,boston_join['35K'].apply(time_convert)
267,boston_model.ipynb,7,19,19,0,68,Assign2,,internal,enforcing,boston_join['40K Duration'] = boston_join['40K'].apply(time_convert)
268,boston_model.ipynb,7,19,19,30,68,Call1,apply,internal,enforcing,boston_join['40K'].apply(time_convert)
269,boston_model.ipynb,7,20,20,0,88,Assign2,,internal,enforcing,boston_join['Official Time Duration'] = boston_join['Official Time'].apply(time_convert)
270,boston_model.ipynb,7,20,20,40,88,Call1,apply,internal,enforcing,boston_join['Official Time'].apply(time_convert)
271,boston_model.ipynb,7,24,24,0,227,Call1,dropna,internal,enforcing,"boston_join.dropna(inplace=True,subset=['Bib','Age','5K Duration','10K Duration','15K Duration','20K Duration', 'Half Duration', '25K Duration','30K Duration','35K Duration','40K Duration','Official Time Duration', 'Temp (F)'])"
272,boston_model.ipynb,7,26,26,0,223,Assign1,,internal,checking,"boston_clean=boston_join[['Bib','Age','5K Duration','10K Duration','15K Duration','20K Duration', 'Half Duration', '25K Duration','30K Duration','35K Duration','40K Duration','Official Time Duration', 'Temp (F)', 'F', 'M']]"
273,boston_model.ipynb,7,30,30,0,20,Expr3,columns,revealing,checking,boston_clean.columns
274,boston_model.ipynb,9,2,2,0,81,Assign1,,internal,checking,"X_5K = boston_clean[['Bib','Age','Official Time Duration', 'F', 'M', 'Temp (F)']]"
275,boston_model.ipynb,9,3,3,7,56,Call1,reshape,internal,enforcing,"boston_clean['5K Duration'].values.reshape(-1, 1)"
276,boston_model.ipynb,9,4,4,0,29,Call2,shape,revealing,checking,"print(X_5K.shape, y_5K.shape)"
277,boston_model.ipynb,11,5,5,0,17,Call1,head,revealing,checking,X_train_5K.head()
278,boston_model.ipynb,21,4,4,43,58,Call1,max,internal,checking,y_test_5K.max()
279,boston_model.ipynb,32,4,4,0,78,Assign1,,internal,checking,"X_nobib = boston_clean[['Age','Official Time Duration', 'F', 'M', 'Temp (F)']]"
280,boston_model.ipynb,32,5,5,10,59,Call1,reshape,internal,enforcing,"boston_clean['5K Duration'].values.reshape(-1, 1)"
281,boston_model.ipynb,32,6,6,0,35,Call2,shape,revealing,checking,"print(X_nobib.shape, y_nobib.shape)"
282,boston_model.ipynb,32,30,30,46,64,Call1,max,internal,checking,y_test_nobib.max()
283,boston_model.ipynb,34,4,4,0,98,Assign1,,internal,checking,"X_10K = boston_clean[['Bib', 'Age','Official Time Duration', 'F', 'M', 'Temp (F)', '5K Duration']]"
284,boston_model.ipynb,34,5,5,8,58,Call1,reshape,internal,enforcing,"boston_clean['10K Duration'].values.reshape(-1, 1)"
285,boston_model.ipynb,34,6,6,0,31,Call2,shape,revealing,checking,"print(X_10K.shape, y_10K.shape)"
286,boston_model.ipynb,34,30,30,44,60,Call1,max,internal,checking,y_test_10K.max()
287,boston_model.ipynb,35,1,1,0,15,Expr1,,revealing,checking,predictions_10K
288,boston_model.ipynb,38,4,4,0,114,Assign1,,internal,checking,"X_15K = boston_clean[['Bib', 'Age','Official Time Duration', 'F', 'M', 'Temp (F)', '5K Duration', '10K Duration']]"
289,boston_model.ipynb,38,5,5,8,58,Call1,reshape,internal,enforcing,"boston_clean['15K Duration'].values.reshape(-1, 1)"
290,boston_model.ipynb,38,6,6,0,31,Call2,shape,revealing,checking,"print(X_15K.shape, y_15K.shape)"
291,boston_model.ipynb,38,30,30,44,60,Call1,max,internal,checking,y_test_15K.max()
292,boston_model.ipynb,41,4,4,0,130,Assign1,,internal,checking,"X_20K = boston_clean[['Bib', 'Age','Official Time Duration', 'F', 'M', 'Temp (F)', '5K Duration', '10K Duration', '15K Duration']]"
293,boston_model.ipynb,41,5,5,8,58,Call1,reshape,internal,enforcing,"boston_clean['20K Duration'].values.reshape(-1, 1)"
294,boston_model.ipynb,41,6,6,0,31,Call2,shape,revealing,checking,"print(X_20K.shape, y_20K.shape)"
295,boston_model.ipynb,41,30,30,44,60,Call1,max,internal,checking,y_test_20K.max()
296,boston_model.ipynb,44,4,4,0,147,Assign1,,internal,checking,"X_Half = boston_clean[['Bib', 'Age','Official Time Duration', 'F', 'M', 'Temp (F)', '5K Duration', '10K Duration', '15K Duration', '20K Duration']]"
297,boston_model.ipynb,44,5,5,9,60,Call1,reshape,internal,enforcing,"boston_clean['Half Duration'].values.reshape(-1, 1)"
298,boston_model.ipynb,44,6,6,0,33,Call2,shape,revealing,checking,"print(X_Half.shape, y_Half.shape)"
299,boston_model.ipynb,44,30,30,45,62,Call1,max,internal,checking,y_test_Half.max()
300,boston_model.ipynb,47,4,4,0,163,Assign1,,internal,checking,"X_25K = boston_clean[['Bib', 'Age','Official Time Duration', 'F', 'M', 'Temp (F)', '5K Duration', '10K Duration', '15K Duration', '20K Duration', 'Half Duration']]"
301,boston_model.ipynb,47,5,5,8,58,Call1,reshape,internal,enforcing,"boston_clean['25K Duration'].values.reshape(-1, 1)"
302,boston_model.ipynb,47,6,6,0,31,Call2,shape,revealing,checking,"print(X_25K.shape, y_25K.shape)"
303,boston_model.ipynb,47,30,30,44,60,Call1,max,internal,checking,y_test_25K.max()
304,boston_model.ipynb,50,4,4,0,178,Assign1,,internal,checking,"X_30K = boston_clean[['Bib', 'Age','Official Time Duration', 'F', 'M', 'Temp (F)', '5K Duration', '10K Duration', '15K Duration', '20K Duration','Half Duration', '25K Duration']]"
305,boston_model.ipynb,50,5,5,8,58,Call1,reshape,internal,enforcing,"boston_clean['30K Duration'].values.reshape(-1, 1)"
306,boston_model.ipynb,50,6,6,0,31,Call2,shape,revealing,checking,"print(X_30K.shape, y_30K.shape)"
307,boston_model.ipynb,50,30,30,44,60,Call1,max,internal,checking,y_test_30K.max()
308,boston_model.ipynb,53,4,4,0,195,Assign1,,internal,checking,"X_35K = boston_clean[['Bib', 'Age','Official Time Duration', 'F', 'M', 'Temp (F)', '5K Duration', '10K Duration', '15K Duration', '20K Duration', 'Half Duration','25K Duration',  '30K Duration']]"
309,boston_model.ipynb,53,5,5,8,58,Call1,reshape,internal,enforcing,"boston_clean['35K Duration'].values.reshape(-1, 1)"
310,boston_model.ipynb,53,6,6,0,31,Call2,shape,revealing,checking,"print(X_30K.shape, y_30K.shape)"
311,boston_model.ipynb,53,30,30,44,60,Call1,max,internal,checking,y_test_35K.max()
312,boston_model.ipynb,56,4,4,0,211,Assign1,,internal,checking,"X_40K = boston_clean[['Bib', 'Age','Official Time Duration', 'F', 'M', 'Temp (F)', '5K Duration', '10K Duration', '15K Duration', '20K Duration',  'Half Duration', '25K Duration', '30K Duration','35K Duration']]"
313,boston_model.ipynb,56,5,5,8,58,Call1,reshape,internal,enforcing,"boston_clean['40K Duration'].values.reshape(-1, 1)"
314,boston_model.ipynb,56,6,6,0,31,Call2,shape,revealing,checking,"print(X_40K.shape, y_40K.shape)"
315,boston_model.ipynb,56,30,30,44,60,Call1,max,internal,checking,y_test_40K.max()
316,boston_model.ipynb,59,4,4,0,203,Assign1,,internal,checking,"X_Final = boston_clean[['Bib', 'Age', 'F', 'M', 'Temp (F)', '5K Duration', '10K Duration', '15K Duration', '20K Duration','Half Duration', '25K Duration', '30K Duration', '35K Duration', '40K Duration']]"
317,boston_model.ipynb,59,5,5,10,70,Call1,reshape,internal,enforcing,"boston_clean['Official Time Duration'].values.reshape(-1, 1)"
318,boston_model.ipynb,59,6,6,0,35,Call2,shape,revealing,checking,"print(X_Final.shape, y_Final.shape)"
319,boston_model.ipynb,59,30,30,46,64,Call1,max,internal,checking,y_test_Final.max()
320,boston_model.ipynb,62,1,1,0,20,Expr3,columns,revealing,checking,boston_clean.columns
321,boston_model.ipynb,63,1,1,0,10,Expr1,,revealing,checking,boston_mse
322,boston_model.ipynb,64,1,1,0,9,Expr1,,revealing,checking,boston_r2
323,boston_model.ipynb,65,6,6,0,19,Expr1,,revealing,checking,boston_residuals_df
324,boston_model.ipynb,68,1,1,0,55,Assign1,,internal,checking,boston_females=boston_clean.loc[boston_clean['F'] == 1]
325,boston_model.ipynb,68,1,1,15,55,Subscript1,,internal,enforcing,boston_clean.loc[boston_clean['F'] == 1]
326,boston_model.ipynb,68,2,2,0,14,Expr1,,revealing,checking,boston_females
327,boston_model.ipynb,69,4,4,0,213,Assign1,,internal,checking,"X_F40K = boston_females[['Bib', 'Age','Official Time Duration', 'F', 'M', 'Temp (F)', '5K Duration', '10K Duration', '15K Duration', '20K Duration','Half Duration', '25K Duration', '30K Duration', '35K Duration']]"
328,boston_model.ipynb,69,5,5,9,61,Call1,reshape,internal,enforcing,"boston_females['40K Duration'].values.reshape(-1, 1)"
329,boston_model.ipynb,69,6,6,0,33,Call2,shape,revealing,checking,"print(X_F40K.shape, y_F40K.shape)"
330,boston_model.ipynb,69,30,30,45,62,Call1,max,internal,checking,y_test_F40K.max()
331,boston_model.ipynb,70,22,22,0,19,Expr1,,revealing,checking,boston_residuals_df
332,notebook_data_profililng.ipynb,11,1,1,43,61,Call2,columns,internal,checking,list(data.columns)
333,notebook_data_profililng.ipynb,20,2,2,11,41,Call1,describe,revealing,checking,"data.describe(include = ""all"")"
334,notebook_data_profililng.ipynb,20,8,8,17,50,Call1,reset_index,internal,enforcing,describe_transposed.reset_index()
335,notebook_data_profililng.ipynb,21,1,1,0,14,Expr1,,revealing,checking,describe_final
336,notebook_data_profililng.ipynb,25,2,2,15,45,Call1,reset_index,internal,enforcing,dtypes_dataframe.reset_index()
337,notebook_data_profililng.ipynb,26,2,2,0,19,Call1,head,revealing,checking,dtypes_final.head()
338,notebook_data_profililng.ipynb,28,3,3,22,54,Call1,astype,internal,enforcing,data.notnull().sum().astype(int)
339,notebook_data_profililng.ipynb,28,4,4,20,33,Call1,isnull,internal,checking,data.isnull()
340,notebook_data_profililng.ipynb,28,4,4,20,51,Call1,astype,internal,enforcing,data.isnull().sum().astype(int)
341,notebook_data_profililng.ipynb,28,7,7,0,26,Assign1,,internal,checking,totalcount = data.shape[0]
342,notebook_data_profililng.ipynb,30,1,1,15,78,Call1,rename,internal,enforcing,"percent_null.reset_index().rename(columns = {0:""null_percent""})"
343,notebook_data_profililng.ipynb,30,1,1,15,41,Call1,reset_index,internal,enforcing,percent_null.reset_index()
344,notebook_data_profililng.ipynb,30,2,2,17,86,Call1,rename,internal,enforcing,"percent_filled.reset_index().rename(columns = {0:""non_null_percent""})"
345,notebook_data_profililng.ipynb,30,2,2,17,45,Call1,reset_index,internal,enforcing,percent_filled.reset_index()
346,notebook_data_profililng.ipynb,30,3,3,22,95,Call1,rename,internal,enforcing,"filled_count_series.reset_index().rename(columns = {0:""non_null_counts""})"
347,notebook_data_profililng.ipynb,30,3,3,22,55,Call1,reset_index,internal,enforcing,filled_count_series.reset_index()
348,notebook_data_profililng.ipynb,30,4,4,20,87,Call1,rename,internal,enforcing,"null_count_series.reset_index().rename(columns = {0:""null_counts""})"
349,notebook_data_profililng.ipynb,30,4,4,20,51,Call1,reset_index,internal,enforcing,null_count_series.reset_index()
350,notebook_data_profililng.ipynb,32,1,1,0,26,Call1,head,revealing,checking,null_info_dataframe.head()
351,notebook_data_profililng.ipynb,36,1,1,0,32,Assign2,,internal,enforcing,"merged[""row_count""] = totalcount"
352,notebook_data_profililng.ipynb,36,3,3,0,48,Call1,drop,internal,enforcing,"merged.drop([""count""], axis = 1, inplace = True)"
353,notebook_data_profililng.ipynb,37,1,1,0,13,Call1,head,revealing,checking,merged.head()
354,notebook_data_profililng.ipynb,39,5,5,4,46,Assign1,,internal,checking,"unique_value = merged.loc[index, ""unique""]"
355,notebook_data_profililng.ipynb,39,9,9,8,49,Assign1,,internal,checking,"feature_name = merged.loc[index, ""index""]"
356,notebook_data_profililng.ipynb,39,13,13,8,55,Assign3,loc,internal,enforcing,"merged.loc[index, ""unique""] = number_of_uniques"
357,notebook_data_profililng.ipynb,41,2,2,0,53,Assign2,,internal,enforcing,"merged[""data_type""] = merged[""data_type""].astype(str)"
358,notebook_data_profililng.ipynb,41,2,2,22,53,Call1,astype,internal,enforcing,"merged[""data_type""].astype(str)"
359,notebook_data_profililng.ipynb,43,1,1,24,52,Call1,unique,internal,checking,"merged[""data_type""].unique()"
360,notebook_data_profililng.ipynb,43,12,12,25,53,Call1,astype,internal,enforcing,merged[column].astype(float)
361,notebook_data_profililng.ipynb,46,2,2,20,40,Call2,columns,internal,checking,list(merged.columns)
362,notebook_data_profililng.ipynb,46,9,9,4,39,Assign1,,internal,checking,"column = merged.loc[index, ""index""]"
363,notebook_data_profililng.ipynb,46,18,18,8,39,Assign1,,internal,checking,"value = merged.loc[index, attr]"
364,notebook_data_profililng.ipynb,56,11,11,4,38,Assign1,,internal,checking,sub_dictionary = profile_dict[key]
365,notebook_data_profililng.ipynb,56,15,15,8,27,Assign1,,internal,checking,attribute = keys[0]
366,notebook_data_profililng.ipynb,56,16,16,8,37,Assign1,,internal,checking,value = dictionary[attribute]
367,notebook_data_profililng.ipynb,62,9,9,24,58,Call1,dropna,internal,enforcing,"data.dropna(how = ""any"", axis = 0)"
368,notebook_data_profililng.ipynb,62,11,12,14,33,Call2,shape,internal,checking,"""Shape of original dataset {}""\              .format(data.shape)"
369,notebook_data_profililng.ipynb,62,13,14,14,82,Call2,shape,internal,checking,"""Shape of visualization dataset {}. \n{} Records were removed (containing nulls).""\              .format(data_no_nulls.shape, data.shape[0] - data_no_nulls.shape[0])"
370,notebook_data_profililng.ipynb,62,29,29,36,94,Call1,fillna,internal,enforcing,data_no_nulls[column].fillna(data_no_nulls[column].mean())
371,notebook_data_profililng.ipynb,62,29,29,65,93,Call1,mean,internal,checking,data_no_nulls[column].mean()
372,notebook_data_profililng.ipynb,64,1,1,28,55,Call2,columns,internal,checking,list(data_no_nulls.columns)
373,notebook_data_profililng.ipynb,64,6,6,12,67,Call1,drop,internal,enforcing,"data_no_nulls.drop([feature], axis = 1, inplace = True)"
374,notebook_data_profililng.ipynb,69,4,4,32,65,Call1,astype,internal,enforcing,data_no_nulls[column].astype(str)
375,Python Analytics - Best Region for Undergrad Degrees.ipynb,2,2,2,0,19,Call1,head,revealing,checking,region_stats.head()
376,Python Analytics - Best Region for Undergrad Degrees.ipynb,3,3,3,0,37,Call1,size,internal,checking,"region_stats.groupby(""region"").size()"
377,Python Analytics - Best Region for Undergrad Degrees.ipynb,4,2,2,23,62,Call1,mean,internal,checking,region_stats.groupby(['region']).mean()
378,Python Analytics - Best Region for Undergrad Degrees.ipynb,4,3,3,14,62,Call1,drop,internal,enforcing,"grouped_region_stats.drop(columns=[""school_id""])"
379,Python Analytics - Best Region for Undergrad Degrees.ipynb,4,4,4,0,98,Assign2,,internal,enforcing,region_mean['earnings_cost_ratio'] = region_mean['earnings6years']/region_mean['tuition_in_state']
380,Python Analytics - Best Region for Undergrad Degrees.ipynb,4,8,8,16,39,Call1,drop,internal,enforcing,"region_mean.drop([0,9])"
381,Python Analytics - Best Region for Undergrad Degrees.ipynb,4,9,9,0,13,Expr1,,revealing,checking,mean_df_clean
382,Python Analytics - Best Region for Undergrad Degrees.ipynb,6,2,2,0,38,Assign1,,internal,checking,"y1 = mean_df_clean[""tuition_in_state""]"
383,Python Analytics - Best Region for Undergrad Degrees.ipynb,6,3,3,0,36,Assign1,,internal,checking,"y2 = mean_df_clean[""earnings6years""]"
384,Python Analytics - Best Region for Undergrad Degrees.ipynb,8,2,2,0,45,Assign1,,internal,checking,"y_axis = mean_df_clean[""earnings_cost_ratio""]"
385,Python Analytics - Best Region for Undergrad Degrees.ipynb,9,10,10,0,47,Assign1,,internal,checking,tuition_list = region_stats['tuition_in_state']
386,Python Analytics - Best Region for Undergrad Degrees.ipynb,9,13,13,24,51,Call1,quantile,internal,checking,tuition_list.quantile(0.25)
387,Python Analytics - Best Region for Undergrad Degrees.ipynb,9,17,17,19,46,Call1,quantile,internal,checking,tuition_list.quantile(0.50)
388,Python Analytics - Best Region for Undergrad Degrees.ipynb,9,21,21,25,52,Call1,quantile,internal,checking,tuition_list.quantile(0.75)
389,Python Analytics - Best Region for Undergrad Degrees.ipynb,9,25,25,24,48,Call1,quantile,internal,checking,tuition_list.quantile(1)
390,Python Analytics - Best Region for Undergrad Degrees.ipynb,9,29,29,0,13,Expr1,,revealing,checking,quartile_bins
391,Python Analytics - Best Region for Undergrad Degrees.ipynb,10,2,2,0,100,Assign2,,internal,enforcing,"region_stats[""tuition_cost_tier""] = pd.cut(region_stats[""tuition_in_state""], bins, labels=bin_names)"
392,Python Analytics - Best Region for Undergrad Degrees.ipynb,10,5,5,0,39,Assign1,,internal,checking,cost = region_stats['tuition_in_state']
393,Python Analytics - Best Region for Undergrad Degrees.ipynb,10,6,6,0,42,Assign1,,internal,checking,earnings6 = region_stats['earnings6years']
394,Python Analytics - Best Region for Undergrad Degrees.ipynb,10,7,7,0,44,Assign1,,internal,checking,earnings10 = region_stats['earnings10years']
395,Python Analytics - Best Region for Undergrad Degrees.ipynb,10,10,10,0,52,Assign2,,internal,enforcing,region_stats['earnings_cost_ratio'] = earnings6/cost
396,Python Analytics - Best Region for Undergrad Degrees.ipynb,10,11,11,0,61,Assign2,,internal,enforcing,region_stats['earnings_growth_y6_y10'] = earnings10/earnings6
397,Python Analytics - Best Region for Undergrad Degrees.ipynb,10,12,12,0,121,Assign2,,internal,enforcing,region_stats['weighted_growth_to_tuition'] = region_stats['earnings_cost_ratio'] * region_stats['earnings_growth_y6_y10']
398,Python Analytics - Best Region for Undergrad Degrees.ipynb,11,2,2,13,74,Call1,drop,internal,enforcing,"region_stats.drop(columns=['school_id', 'tuition_out_state'])"
399,Python Analytics - Best Region for Undergrad Degrees.ipynb,12,2,2,0,71,Assign1,,internal,checking,"df0_10k = clean_info.loc[clean_info[""tuition_cost_tier""] == 'less_10k']"
400,Python Analytics - Best Region for Undergrad Degrees.ipynb,12,2,2,10,71,Subscript1,,internal,enforcing,"clean_info.loc[clean_info[""tuition_cost_tier""] == 'less_10k']"
401,Python Analytics - Best Region for Undergrad Degrees.ipynb,12,3,3,0,44,Assign1,,internal,checking,df0_10k_edit0 = df0_10k[df0_10k.region != 0]
402,Python Analytics - Best Region for Undergrad Degrees.ipynb,12,3,3,16,44,Subscript1,,internal,enforcing,df0_10k[df0_10k.region != 0]
403,Python Analytics - Best Region for Undergrad Degrees.ipynb,12,4,4,0,56,Assign1,,internal,checking,df0_10k_edit9 = df0_10k_edit0[df0_10k_edit0.region != 9]
404,Python Analytics - Best Region for Undergrad Degrees.ipynb,12,4,4,16,56,Subscript1,,internal,enforcing,df0_10k_edit0[df0_10k_edit0.region != 9]
405,Python Analytics - Best Region for Undergrad Degrees.ipynb,12,6,6,0,71,Assign1,,internal,checking,"df10_18k = clean_info.loc[clean_info[""tuition_cost_tier""] == '10k_18k']"
406,Python Analytics - Best Region for Undergrad Degrees.ipynb,12,6,6,11,71,Subscript1,,internal,enforcing,"clean_info.loc[clean_info[""tuition_cost_tier""] == '10k_18k']"
407,Python Analytics - Best Region for Undergrad Degrees.ipynb,12,7,7,0,46,Assign1,,internal,checking,df10_18k_edit = df10_18k[df10_18k.region != 9]
408,Python Analytics - Best Region for Undergrad Degrees.ipynb,12,7,7,16,46,Subscript1,,internal,enforcing,df10_18k[df10_18k.region != 9]
409,Python Analytics - Best Region for Undergrad Degrees.ipynb,12,9,9,0,70,Assign1,,internal,checking,"df18_32 = clean_info.loc[clean_info[""tuition_cost_tier""] == '18k_32k']"
410,Python Analytics - Best Region for Undergrad Degrees.ipynb,12,9,9,10,70,Subscript1,,internal,enforcing,"clean_info.loc[clean_info[""tuition_cost_tier""] == '18k_32k']"
411,Python Analytics - Best Region for Undergrad Degrees.ipynb,12,11,11,0,71,Assign1,,internal,checking,"df32 = clean_info.loc[clean_info[""tuition_cost_tier""] == 'greater_32k']"
412,Python Analytics - Best Region for Undergrad Degrees.ipynb,12,11,11,7,71,Subscript1,,internal,enforcing,"clean_info.loc[clean_info[""tuition_cost_tier""] == 'greater_32k']"
413,Python Analytics - Best Region for Undergrad Degrees.ipynb,13,2,2,18,58,Call1,mean,internal,checking,df0_10k_edit9.groupby(['region']).mean()
414,Python Analytics - Best Region for Undergrad Degrees.ipynb,13,4,4,19,59,Call1,mean,internal,checking,df10_18k_edit.groupby(['region']).mean()
415,Python Analytics - Best Region for Undergrad Degrees.ipynb,13,6,6,18,52,Call1,mean,internal,checking,df18_32.groupby(['region']).mean()
416,Python Analytics - Best Region for Undergrad Degrees.ipynb,13,8,8,15,46,Call1,mean,internal,checking,df32.groupby(['region']).mean()
417,Python Analytics - Best Region for Undergrad Degrees.ipynb,16,2,3,11,109,Call1,drop,internal,enforcing,"df0_10k_grouped.drop(['tuition_in_state','earnings6years',                                 'earnings10years','earnings_cost_ratio','earnings_growth_y6_y10'], axis = 1)"
418,Python Analytics - Best Region for Undergrad Degrees.ipynb,16,5,5,0,72,Call1,rename,internal,enforcing,table10k.rename(columns={'weighted_growth_to_tuition':'Worth-It Ratio'})
419,Python Analytics - Best Region for Undergrad Degrees.ipynb,18,6,6,0,48,Assign1,,internal,checking,"y_axis1 = df0_10k_grouped[""earnings_cost_ratio""]"
420,Python Analytics - Best Region for Undergrad Degrees.ipynb,18,7,7,0,49,Assign1,,internal,checking,"y_axis2 = df10_18k_grouped[""earnings_cost_ratio""]"
421,Python Analytics - Best Region for Undergrad Degrees.ipynb,18,8,8,0,48,Assign1,,internal,checking,"y_axis3 = df18_32_grouped[""earnings_cost_ratio""]"
422,Python Analytics - Best Region for Undergrad Degrees.ipynb,18,9,9,0,45,Assign1,,internal,checking,"y_axis4 = df32_grouped[""earnings_cost_ratio""]"
423,Python Analytics - Best Region for Undergrad Degrees.ipynb,19,2,2,0,17,Expr1,,revealing,checking,earningsgrowth10k
424,Python Analytics - Best Region for Undergrad Degrees.ipynb,19,3,3,0,7,Expr1,,revealing,checking,y_axis1
425,Python Analytics - Best Region for Undergrad Degrees.ipynb,20,2,2,0,18,Expr1,,revealing,checking,weighted_growth10k
426,NYSE-Data Analysis.ipynb,3,1,1,0,25,Subscript1,,internal,enforcing,"data[data.symbol == ""FB""]"
427,NYSE-Data Analysis.ipynb,3,1,1,0,32,Call1,head,revealing,checking,"data[data.symbol == ""FB""].head()"
428,NYSE-Data Analysis.ipynb,4,1,1,0,20,Call1,unique,internal,checking,data.symbol.unique()
429,NYSE-Data Analysis.ipynb,5,1,1,4,24,Call1,unique,internal,checking,data.symbol.unique()
430,NYSE-Data Analysis.ipynb,9,5,5,0,34,Assign1,,internal,checking,"aapl = data[data.symbol == ""AAPL""]"
431,NYSE-Data Analysis.ipynb,9,5,5,7,34,Subscript1,,internal,enforcing,"data[data.symbol == ""AAPL""]"
432,NYSE-Data Analysis.ipynb,12,3,3,0,28,Assign1,,internal,checking,"aapl_close = aapl[[""close""]]"
433,NYSE-Data Analysis.ipynb,12,4,4,0,22,Assign1,,internal,checking,"dates = aapl[[""date""]]"
434,NYSE-Data Analysis.ipynb,12,7,7,14,72,Call1,apply,internal,enforcing,aapl_close.apply(lambda x: np.log(x) - np.log(x.shift(1)))
435,NYSE-Data Analysis.ipynb,16,1,1,0,36,Assign1,,internal,checking,"googl = data[data.symbol == ""GOOGL""]"
436,NYSE-Data Analysis.ipynb,16,1,1,8,36,Subscript1,,internal,enforcing,"data[data.symbol == ""GOOGL""]"
437,college-summary.ipynb,7,1,1,9,89,Call1,concat,internal,enforcing,"pd.concat([old_df, f18_df], verify_integrity=True, ignore_index=True, sort=True)"
438,college-summary.ipynb,7,2,2,0,13,Call1,head,revealing,checking,all_df.head()
439,college-summary.ipynb,9,1,1,0,60,Assign2,,internal,enforcing,all_df['Created At DOW'] = all_df['Created At'].dt.dayofweek
440,college-summary.ipynb,10,5,5,14,92,Call1,value_counts,internal,checking,"get_semester_asana(all_df, sem)['Created At DOW'].value_counts(normalize=True)"
441,college-summary.ipynb,10,6,6,14,92,Call1,value_counts,internal,checking,"get_semester_asana(all_df, sem)['Created At DOW'].value_counts(normalize=True)"
442,college-summary.ipynb,12,23,23,22,78,Call1,value_counts,internal,checking,"get_semester_asana(all_df, sem)['Column'].value_counts()"
443,college-summary.ipynb,12,24,24,22,78,Call1,value_counts,internal,checking,"get_semester_asana(all_df, sem)['Column'].value_counts()"
444,college-summary.ipynb,14,1,1,0,68,Assign2,,internal,enforcing,all_df['Duration'] = (all_df['Completed At'] - all_df['Created At'])
445,college-summary.ipynb,15,5,5,14,122,Subscript1,,internal,enforcing,"get_semester_asana(all_df, sem)[(get_semester_asana(all_df, sem)['Duration'].astype('timedelta64[D]') < 30)]"
446,college-summary.ipynb,15,5,5,14,163,Call1,value_counts,internal,checking,"get_semester_asana(all_df, sem)[(get_semester_asana(all_df, sem)['Duration'].astype('timedelta64[D]') < 30)]['Duration'].value_counts(normalize=True)"
447,college-summary.ipynb,15,5,5,47,115,Call1,astype,internal,enforcing,"get_semester_asana(all_df, sem)['Duration'].astype('timedelta64[D]')"
448,college-summary.ipynb,15,6,6,14,122,Subscript1,,internal,enforcing,"get_semester_asana(all_df, sem)[(get_semester_asana(all_df, sem)['Duration'].astype('timedelta64[D]') < 30)]"
449,college-summary.ipynb,15,6,6,14,163,Call1,value_counts,internal,checking,"get_semester_asana(all_df, sem)[(get_semester_asana(all_df, sem)['Duration'].astype('timedelta64[D]') < 30)]['Duration'].value_counts(normalize=True)"
450,college-summary.ipynb,15,6,6,47,115,Call1,astype,internal,enforcing,"get_semester_asana(all_df, sem)['Duration'].astype('timedelta64[D]')"
451,college-summary.ipynb,16,2,2,26,98,Call1,dropna,internal,enforcing,all_df[all_df['Duration'].astype('timedelta64[D]') < 3]['Name'].dropna()
452,college-summary.ipynb,16,2,2,26,81,Subscript1,,internal,enforcing,all_df[all_df['Duration'].astype('timedelta64[D]') < 3]
453,college-summary.ipynb,16,2,2,33,76,Call1,astype,internal,enforcing,all_df['Duration'].astype('timedelta64[D]')
454,college-summary.ipynb,16,3,3,26,82,Subscript1,,internal,enforcing,all_df[all_df['Duration'].astype('timedelta64[D]') >= 3]
455,college-summary.ipynb,16,3,3,26,99,Call1,dropna,internal,enforcing,all_df[all_df['Duration'].astype('timedelta64[D]') >= 3]['Name'].dropna()
456,college-summary.ipynb,16,3,3,33,76,Call1,astype,internal,enforcing,all_df['Duration'].astype('timedelta64[D]')
457,college-summary.ipynb,18,5,5,14,81,Call1,value_counts,internal,checking,"get_semester_asana(all_df, sem)['Due Date'].dropna().value_counts()"
458,college-summary.ipynb,18,5,5,14,66,Call1,dropna,internal,enforcing,"get_semester_asana(all_df, sem)['Due Date'].dropna()"
459,college-summary.ipynb,18,6,6,14,66,Call1,dropna,internal,enforcing,"get_semester_asana(all_df, sem)['Due Date'].dropna()"
460,college-summary.ipynb,18,6,6,14,81,Call1,value_counts,internal,checking,"get_semester_asana(all_df, sem)['Due Date'].dropna().value_counts()"
461,college-summary.ipynb,20,1,1,0,63,Assign2,,internal,enforcing,all_df['Overdue'] = all_df['Completed At'] - all_df['Due Date']
462,college-summary.ipynb,21,5,5,14,85,Call1,value_counts,internal,checking,"get_semester_asana(all_df, sem)['Overdue'].value_counts(normalize=True)"
463,college-summary.ipynb,21,6,6,14,85,Call1,value_counts,internal,checking,"get_semester_asana(all_df, sem)['Overdue'].value_counts(normalize=True)"
464,college-summary.ipynb,22,5,5,14,85,Call1,value_counts,internal,checking,"get_semester_asana(all_df, sem)['Overdue'].value_counts(normalize=True)"
465,college-summary.ipynb,22,6,6,14,85,Call1,value_counts,internal,checking,"get_semester_asana(all_df, sem)['Overdue'].value_counts(normalize=True)"
466,college-summary.ipynb,23,2,2,28,82,Subscript1,,internal,enforcing,all_df[all_df['Overdue'].astype('timedelta64[D]') < 0]
467,college-summary.ipynb,23,2,2,28,99,Call1,dropna,internal,enforcing,all_df[all_df['Overdue'].astype('timedelta64[D]') < 0]['Name'].dropna()
468,college-summary.ipynb,23,2,2,35,77,Call1,astype,internal,enforcing,all_df['Overdue'].astype('timedelta64[D]')
469,college-summary.ipynb,23,3,3,29,101,Call1,dropna,internal,enforcing,all_df[all_df['Overdue'].astype('timedelta64[D]') == 0]['Name'].dropna()
470,college-summary.ipynb,23,3,3,29,84,Subscript1,,internal,enforcing,all_df[all_df['Overdue'].astype('timedelta64[D]') == 0]
471,college-summary.ipynb,23,3,3,36,78,Call1,astype,internal,enforcing,all_df['Overdue'].astype('timedelta64[D]')
472,college-summary.ipynb,23,4,4,29,100,Call1,dropna,internal,enforcing,all_df[all_df['Overdue'].astype('timedelta64[D]') > 0]['Name'].dropna()
473,college-summary.ipynb,23,4,4,29,83,Subscript1,,internal,enforcing,all_df[all_df['Overdue'].astype('timedelta64[D]') > 0]
474,college-summary.ipynb,23,4,4,36,78,Call1,astype,internal,enforcing,all_df['Overdue'].astype('timedelta64[D]')
475,college-summary.ipynb,26,7,7,0,58,Assign2,,internal,enforcing,exam_counts['date']  = pd.to_datetime(exam_counts['date'])
476,Models.ipynb,2,2,2,0,14,Expr1,,revealing,checking,df_county_data
477,Models.ipynb,3,2,2,0,29,Assign1,,internal,checking,state=df_county_data['State']
478,Models.ipynb,3,3,3,0,38,Assign1,,internal,checking,"county = df_county_data[""County Name""]"
479,Models.ipynb,3,4,4,0,45,Assign1,,internal,checking,"grad_rate = df_county_data[""Graduation Rate""]"
480,Models.ipynb,5,1,1,0,38,Assign1,,internal,checking,"county = df_county_data[""County Name""]"
481,Models.ipynb,5,2,2,0,41,Assign1,,internal,checking,"pov_rate = df_county_data[""Poverty Rate""]"
482,Models.ipynb,6,1,1,0,45,Assign1,,internal,checking,"grad_rate = df_county_data[""Graduation Rate""]"
483,Models.ipynb,6,2,2,0,41,Assign1,,internal,checking,"pov_rate = df_county_data[""Poverty Rate""]"
484,Models.ipynb,7,7,7,0,45,Assign1,,internal,checking,"grad_rate = df_county_data[""Graduation Rate""]"
485,Models.ipynb,7,8,8,0,38,Assign1,,internal,checking,"county = df_county_data[""County Name""]"
486,Models.ipynb,7,9,9,0,41,Assign1,,internal,checking,"pov_rate = df_county_data[""Poverty Rate""]"
487,Models.ipynb,8,2,2,0,34,Assign1,,internal,checking,"x = df_county_data[""Poverty Rate""]"
488,Models.ipynb,8,3,3,0,37,Assign1,,internal,checking,"y = df_county_data[""Graduation Rate""]"
489,Models.ipynb,10,1,1,0,38,Assign1,,internal,checking,"county = df_county_data[""County Name""]"
490,Models.ipynb,10,2,2,0,45,Assign1,,internal,checking,"house_size = df_county_data[""Household Size""]"
491,Models.ipynb,11,1,1,0,45,Assign1,,internal,checking,"grad_rate = df_county_data[""Graduation Rate""]"
492,Models.ipynb,11,2,2,0,45,Assign1,,internal,checking,"house_size = df_county_data[""Household Size""]"
493,Models.ipynb,12,7,7,0,45,Assign1,,internal,checking,"grad_rate = df_county_data[""Graduation Rate""]"
494,Models.ipynb,12,8,8,0,38,Assign1,,internal,checking,"county = df_county_data[""County Name""]"
495,Models.ipynb,12,9,9,0,43,Assign1,,internal,checking,"pov_rate = df_county_data[""Household Size""]"
496,Models.ipynb,13,2,2,0,36,Assign1,,internal,checking,"x = df_county_data[""Household Size""]"
497,Models.ipynb,13,3,3,0,37,Assign1,,internal,checking,"y = df_county_data[""Graduation Rate""]"
498,Models.ipynb,15,1,1,0,38,Assign1,,internal,checking,"county = df_county_data[""County Name""]"
499,Models.ipynb,15,2,2,0,48,Assign1,,internal,checking,"house_size = df_county_data[""Unemployment Rate""]"
500,Models.ipynb,16,1,1,0,45,Assign1,,internal,checking,"grad_rate = df_county_data[""Graduation Rate""]"
501,Models.ipynb,16,2,2,0,48,Assign1,,internal,checking,"house_size = df_county_data[""Unemployment Rate""]"
502,Models.ipynb,17,7,7,0,45,Assign1,,internal,checking,"grad_rate = df_county_data[""Graduation Rate""]"
503,Models.ipynb,17,8,8,0,38,Assign1,,internal,checking,"county = df_county_data[""County Name""]"
504,Models.ipynb,17,9,9,0,46,Assign1,,internal,checking,"pov_rate = df_county_data[""Unemployment Rate""]"
505,Models.ipynb,18,2,2,0,39,Assign1,,internal,checking,"x = df_county_data[""Unemployment Rate""]"
506,Models.ipynb,18,3,3,0,37,Assign1,,internal,checking,"y = df_county_data[""Graduation Rate""]"
507,Models.ipynb,20,1,1,0,38,Assign1,,internal,checking,"county = df_county_data[""County Name""]"
508,Models.ipynb,20,2,2,0,44,Assign1,,internal,checking,"house_size = df_county_data[""Median Income""]"
509,Models.ipynb,21,1,1,0,45,Assign1,,internal,checking,"grad_rate = df_county_data[""Graduation Rate""]"
510,Models.ipynb,21,2,2,0,44,Assign1,,internal,checking,"house_size = df_county_data[""Median Income""]"
511,Models.ipynb,22,7,7,0,45,Assign1,,internal,checking,"grad_rate = df_county_data[""Graduation Rate""]"
512,Models.ipynb,22,8,8,0,38,Assign1,,internal,checking,"county = df_county_data[""County Name""]"
513,Models.ipynb,22,9,9,0,42,Assign1,,internal,checking,"pov_rate = df_county_data[""Median Income""]"
514,Models.ipynb,23,2,2,0,35,Assign1,,internal,checking,"x = df_county_data[""Median Income""]"
515,Models.ipynb,23,3,3,0,37,Assign1,,internal,checking,"y = df_county_data[""Graduation Rate""]"
516,Models.ipynb,25,1,1,0,38,Assign1,,internal,checking,"county = df_county_data[""County Name""]"
517,Models.ipynb,25,2,2,0,66,Assign1,,internal,checking,"house_size = df_county_data[""Speak a language other than English""]"
518,Models.ipynb,26,1,1,0,45,Assign1,,internal,checking,"grad_rate = df_county_data[""Graduation Rate""]"
519,Models.ipynb,26,2,2,0,66,Assign1,,internal,checking,"house_size = df_county_data[""Speak a language other than English""]"
520,Models.ipynb,27,7,7,0,45,Assign1,,internal,checking,"grad_rate = df_county_data[""Graduation Rate""]"
521,Models.ipynb,27,8,8,0,38,Assign1,,internal,checking,"county = df_county_data[""County Name""]"
522,Models.ipynb,27,9,9,0,64,Assign1,,internal,checking,"pov_rate = df_county_data[""Speak a language other than English""]"
523,Models.ipynb,28,2,2,0,57,Assign1,,internal,checking,"x = df_county_data[""Speak a language other than English""]"
524,Models.ipynb,28,3,3,0,37,Assign1,,internal,checking,"y = df_county_data[""Graduation Rate""]"
525,Models.ipynb,29,5,5,0,5,Expr1,,revealing,checking,lines
526,ml-live.ipynb,14,1,1,0,44,Assign1,,internal,checking,tollrides = trips[trips['tolls_amount'] > 0]
527,ml-live.ipynb,14,1,1,12,44,Subscript1,,internal,enforcing,trips[trips['tolls_amount'] > 0]
528,ml-live.ipynb,14,2,2,0,64,Subscript1,,internal,enforcing,tollrides[tollrides['pickup_datetime'] == '2012-09-05 15:45:00']
529,ml-live.ipynb,16,1,1,0,16,Call1,describe,revealing,checking,trips.describe()
530,ml-live.ipynb,18,2,2,10,34,Call1,copy,internal,checking,trips_in.copy(deep=True)
531,ml-live.ipynb,18,4,4,2,27,Delete1,,internal,enforcing,del trips['tolls_amount']
532,ml-live.ipynb,18,5,5,2,27,Delete1,,internal,enforcing,del trips['total_amount']
533,ml-live.ipynb,18,6,6,2,28,Delete1,,internal,enforcing,del trips['trip_distance']
534,ml-live.ipynb,18,7,7,2,30,Delete1,,internal,enforcing,del trips['pickup_datetime']
535,ml-live.ipynb,18,24,24,0,18,Call1,describe,revealing,checking,tripsqc.describe()
536,ml-live.ipynb,21,6,6,0,39,Assign1,,internal,checking,"df_train = shuffled.iloc[:trainsize, :]"
537,ml-live.ipynb,21,7,7,0,60,Assign1,,internal,checking,"df_valid = shuffled.iloc[trainsize:(trainsize+validsize), :]"
538,ml-live.ipynb,22,1,1,0,19,Call1,describe,revealing,checking,df_train.describe()
539,ml-live.ipynb,23,1,1,0,19,Call1,describe,revealing,checking,df_valid.describe()
540,ml-live.ipynb,28,10,10,17,47,Call1,mean,internal,checking,np.mean((actual-predicted)**2)
541,ml-live.ipynb,28,22,22,7,37,Call1,mean,internal,checking,df_train['fare_amount'].mean()
542,ml-live.ipynb,28,22,22,40,74,Call1,mean,internal,checking,estimate_distance(df_train).mean()
543,ml-live.ipynb,31,3,3,0,46,Assign1,,internal,checking,FEATURES = CSV_COLUMNS[1:len(CSV_COLUMNS) - 1]
544,ml-live.ipynb,31,4,4,0,22,Assign1,,internal,checking,LABEL = CSV_COLUMNS[0]
545,ml-live.ipynb,47,2,2,0,31,Assign2,,internal,enforcing,os.environ['PROJECT'] = PROJECT
546,ml-live.ipynb,47,3,3,0,29,Assign2,,internal,enforcing,os.environ['BUCKET'] = BUCKET
547,ml-live.ipynb,47,4,4,0,29,Assign2,,internal,enforcing,os.environ['REGION'] = REGION
548,ml-live.ipynb,47,5,5,0,31,Assign2,,internal,enforcing,os.environ['TFVERSION'] = '1.8'
549,hopper_miller_zhang_final0814.ipynb,3,4,4,0,45,Assign2,,internal,enforcing,breeds['Breed'] = breeds['Breed'].str.strip()
550,hopper_miller_zhang_final0814.ipynb,3,8,8,0,58,Assign2,,internal,enforcing,data['OutcomeSubtype'] = data['OutcomeSubtype'].fillna('')
551,hopper_miller_zhang_final0814.ipynb,3,8,8,25,58,Call1,fillna,internal,enforcing,data['OutcomeSubtype'].fillna('')
552,hopper_miller_zhang_final0814.ipynb,3,9,9,0,51,Assign2,,internal,enforcing,data['Female'] = 'Female' in data['SexuponOutcome']
553,hopper_miller_zhang_final0814.ipynb,3,10,10,0,49,Call1,fillna,internal,enforcing,"data['AgeuponOutcome'].fillna('', inplace = True)"
554,hopper_miller_zhang_final0814.ipynb,3,33,33,0,61,Assign2,,internal,enforcing,data['ConvertedAge']=data['AgeuponOutcome'].apply(ageConvert)
555,hopper_miller_zhang_final0814.ipynb,3,33,33,21,61,Call1,apply,internal,enforcing,data['AgeuponOutcome'].apply(ageConvert)
556,hopper_miller_zhang_final0814.ipynb,3,42,42,0,50,Assign2,,internal,enforcing,data['Female'] = data.SexuponOutcome.apply(female)
557,hopper_miller_zhang_final0814.ipynb,3,42,42,17,50,Call1,apply,internal,enforcing,data.SexuponOutcome.apply(female)
558,hopper_miller_zhang_final0814.ipynb,3,49,49,0,50,Assign2,,internal,enforcing,data['Intact'] = data.SexuponOutcome.apply(intact)
559,hopper_miller_zhang_final0814.ipynb,3,49,49,17,50,Call1,apply,internal,enforcing,data.SexuponOutcome.apply(intact)
560,hopper_miller_zhang_final0814.ipynb,3,56,56,0,50,Assign2,,internal,enforcing,data['MixedBreed'] = data.Breed.apply(mixed_breed)
561,hopper_miller_zhang_final0814.ipynb,3,56,56,21,50,Call1,apply,internal,enforcing,data.Breed.apply(mixed_breed)
562,hopper_miller_zhang_final0814.ipynb,3,64,64,0,46,Assign2,,internal,enforcing,data['TopBreed'] = data.Breed.apply(top_breed)
563,hopper_miller_zhang_final0814.ipynb,3,64,64,19,46,Call1,apply,internal,enforcing,data.Breed.apply(top_breed)
564,hopper_miller_zhang_final0814.ipynb,3,71,71,29,64,Subscript1,,internal,enforcing,breeds.loc[breeds['Breed'] == word]
565,hopper_miller_zhang_final0814.ipynb,3,73,73,15,29,Call1,mean,internal,checking,np.mean(ranks)
566,hopper_miller_zhang_final0814.ipynb,3,76,76,0,48,Assign2,,internal,enforcing,data['BreedRank'] = data.Breed.apply(breed_rank)
567,hopper_miller_zhang_final0814.ipynb,3,76,76,20,48,Call1,apply,internal,enforcing,data.Breed.apply(breed_rank)
568,hopper_miller_zhang_final0814.ipynb,3,82,82,0,44,Assign2,,internal,enforcing,data['PitBull'] = data.Breed.apply(pit_bull)
569,hopper_miller_zhang_final0814.ipynb,3,82,82,18,44,Call1,apply,internal,enforcing,data.Breed.apply(pit_bull)
570,hopper_miller_zhang_final0814.ipynb,3,88,88,0,46,Assign2,,internal,enforcing,data['BlackCat'] = data.Color.apply(black_cat)
571,hopper_miller_zhang_final0814.ipynb,3,88,88,19,46,Call1,apply,internal,enforcing,data.Color.apply(black_cat)
572,hopper_miller_zhang_final0814.ipynb,3,91,91,7,19,Call1,isnull,internal,checking,pd.isnull(i)
573,hopper_miller_zhang_final0814.ipynb,3,93,93,0,39,Assign2,,internal,enforcing,data['Named'] = data.Name.apply(naming)
574,hopper_miller_zhang_final0814.ipynb,3,93,93,16,39,Call1,apply,internal,enforcing,data.Name.apply(naming)
575,hopper_miller_zhang_final0814.ipynb,3,99,99,29,48,Call1,replace,internal,enforcing,"i.replace("" "", ""-"")"
576,hopper_miller_zhang_final0814.ipynb,3,100,100,29,48,Call1,replace,internal,enforcing,"i.replace(""/"", "" "")"
577,hopper_miller_zhang_final0814.ipynb,3,106,106,0,48,Assign2,,internal,enforcing,data['OrderedColor'] = data.Color.apply(reorder)
578,hopper_miller_zhang_final0814.ipynb,3,106,106,23,48,Call1,apply,internal,enforcing,data.Color.apply(reorder)
579,hopper_miller_zhang_final0814.ipynb,3,107,107,0,48,Assign2,,internal,enforcing,data['OrderedBreed'] = data.Breed.apply(reorder)
580,hopper_miller_zhang_final0814.ipynb,3,107,107,23,48,Call1,apply,internal,enforcing,data.Breed.apply(reorder)
581,hopper_miller_zhang_final0814.ipynb,4,19,19,0,91,Assign2,,internal,enforcing,"data[""ConvertedAge""] = data.groupby(""AnimalType"").transform(lambda x: x.fillna(x.median()))"
582,hopper_miller_zhang_final0814.ipynb,4,19,19,70,90,Call1,fillna,internal,enforcing,x.fillna(x.median())
583,hopper_miller_zhang_final0814.ipynb,4,20,20,0,27,Call1,describe,revealing,checking,data[continuous].describe()
584,hopper_miller_zhang_final0814.ipynb,4,23,23,8,91,Call1,concat,internal,enforcing,"pd.concat([data[target], data[continuous], pd.get_dummies(data[discrete])], axis=1)"
585,hopper_miller_zhang_final0814.ipynb,4,35,35,0,21,Assign1,,internal,checking,X = data2[predictors]
586,hopper_miller_zhang_final0814.ipynb,4,36,36,0,19,Assign1,,internal,checking,y = data2[[target]]
587,hopper_miller_zhang_final0814.ipynb,7,2,2,14,47,Call1,value_counts,internal,checking,data['AnimalType'].value_counts()
588,hopper_miller_zhang_final0814.ipynb,8,2,2,15,49,Call1,value_counts,internal,checking,data['OutcomeType'].value_counts()
589,hopper_miller_zhang_final0814.ipynb,14,1,1,15,41,Call1,unique,internal,checking,data.OrderedBreed.unique()
590,hopper_miller_zhang_final0814.ipynb,14,2,2,25,57,Call1,value_counts,internal,checking,data.OrderedBreed.value_counts()
591,hopper_miller_zhang_final0814.ipynb,16,7,7,4,74,Call2,columns,internal,checking,"plt.xticks(range(len(corr.columns)), corr.columns,rotation='vertical')"
592,hopper_miller_zhang_final0814.ipynb,16,7,7,21,38,Call2,columns,internal,checking,len(corr.columns)
593,hopper_miller_zhang_final0814.ipynb,16,8,8,4,54,Call2,columns,internal,checking,"plt.yticks(range(len(corr.columns)), corr.columns)"
594,hopper_miller_zhang_final0814.ipynb,16,8,8,21,38,Call2,columns,internal,checking,len(corr.columns)
595,hopper_miller_zhang_final0814.ipynb,25,2,2,0,44,Assign1,,internal,checking,data_dog = data[data['AnimalType'] == 'Dog']
596,hopper_miller_zhang_final0814.ipynb,25,2,2,11,44,Subscript1,,internal,enforcing,data[data['AnimalType'] == 'Dog']
597,hopper_miller_zhang_final0814.ipynb,25,3,3,0,44,Assign1,,internal,checking,data_cat = data[data['AnimalType'] == 'Cat']
598,hopper_miller_zhang_final0814.ipynb,25,3,3,11,44,Subscript1,,internal,enforcing,data[data['AnimalType'] == 'Cat']
599,hopper_miller_zhang_final0814.ipynb,25,4,4,0,29,Assign1,,internal,checking,X_dog = data_dog[pred['dog']]
600,hopper_miller_zhang_final0814.ipynb,25,5,5,0,29,Assign1,,internal,checking,X_cat = data_cat[pred['cat']]
601,hopper_miller_zhang_final0814.ipynb,25,6,6,0,26,Assign1,,internal,checking,y_dog = data_dog[[target]]
602,hopper_miller_zhang_final0814.ipynb,25,7,7,0,26,Assign1,,internal,checking,y_cat = data_cat[[target]]
603,hopper_miller_zhang_final0814.ipynb,26,16,16,8,27,Assign1,,internal,checking,data = X[self.cols]
604,hopper_miller_zhang_final0814.ipynb,29,3,3,13,31,Call1,astype,internal,enforcing,cm.astype('float')
605,hopper_miller_zhang_final0814.ipynb,29,17,17,13,21,Call1,max,internal,checking,cm.max()
606,hopper_miller_zhang_final0814.ipynb,36,2,2,18,59,Call1,drop,internal,enforcing,"X_train_feature.drop('Intact_Unknown', 1)"
607,hopper_miller_zhang_final0814.ipynb,36,3,3,18,59,Call1,drop,internal,enforcing,"X_train_feature.drop('Female_Unknown', 1)"
608,hopper_miller_zhang_final0814.ipynb,36,5,5,16,55,Call1,drop,internal,enforcing,"X_dev_feature.drop('Intact_Unknown', 1)"
609,hopper_miller_zhang_final0814.ipynb,36,6,6,16,55,Call1,drop,internal,enforcing,"X_dev_feature.drop('Female_Unknown', 1)"
610,hopper_miller_zhang_final0814.ipynb,39,2,2,14,55,Call1,drop,internal,enforcing,"X_train_feature.drop('AnimalType_Dog', 1)"
611,hopper_miller_zhang_final0814.ipynb,39,4,4,12,51,Call1,drop,internal,enforcing,"X_dev_feature.drop('AnimalType_Dog', 1)"
612,hopper_miller_zhang_final0814.ipynb,41,2,2,14,55,Call1,drop,internal,enforcing,"X_train_feature.drop('AnimalType_Cat', 1)"
613,hopper_miller_zhang_final0814.ipynb,41,4,4,12,51,Call1,drop,internal,enforcing,"X_dev_feature.drop('AnimalType_Cat', 1)"
614,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,0,6,6,17,86,Call1,copy,internal,checking,tourney_comp_ratings[tourney_comp_ratings.index.isin(X.index)].copy()
615,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,0,6,6,38,78,Call2,index,internal,checking,tourney_comp_ratings.index.isin(X.index)
616,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,0,8,8,4,48,Assign2,,internal,enforcing,test_games['predicted_result'] = predictions
617,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,0,9,9,4,44,Assign2,,internal,enforcing,test_games['pred_win_prob'] = pred_probs
618,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,0,10,11,25,112,Call1,sort_values,internal,enforcing,"test_games[test_games['game_result'] !=                                 test_games['predicted_result']].sort_values(by='pred_win_prob', ascending=False)"
619,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,0,10,11,25,63,Subscript1,,internal,enforcing,test_games[test_games['game_result'] !=                                 test_games['predicted_result']]
620,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,0,13,13,4,134,Call1,apply,internal,enforcing,"missed_predictions.apply(lambda x: feature_dictionary.print_game_info(test_games,x['season_t'], x['round'], x['team_t'] ), axis=1)"
621,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,0,14,16,26,110,Call1,apply,internal,enforcing,"missed_predictions.apply(lambda row: utils.get_supporting_features(row,                                                                                         feature_dictionary,                                                                                          feature_list),axis=1)"
622,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,0,18,20,32,118,Call1,apply,internal,enforcing,"missed_predictions.apply(lambda row: utils.get_supporting_features(row,                                                                                                feature_dictionary,                                                                                               model_features),axis=1)"
623,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,0,28,28,4,128,Assign2,,internal,enforcing,missed_predictions['features'] = 100 * missed_predictions['supporting_features'].apply(lambda x: len(x)) / len(feature_list)
624,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,0,28,28,43,108,Call1,apply,internal,enforcing,missed_predictions['supporting_features'].apply(lambda x: len(x))
625,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,0,30,31,4,27,Assign2,,internal,enforcing,missed_predictions['model_features'] = 100 * missed_predictions['supporting_model_features'].apply(lambda x: len(x)) / \        len(model_features)
626,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,0,30,30,49,120,Call1,apply,internal,enforcing,missed_predictions['supporting_model_features'].apply(lambda x: len(x))
627,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,0,33,33,4,63,Assign2,,internal,enforcing,missed_predictions['game_index'] = missed_predictions.index
628,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,1,12,12,4,53,Assign1,,internal,checking,least_important_label = important_features[-1][0]
629,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,1,23,23,56,81,Call1,drop,internal,enforcing,X.drop(columns=drop_list)
630,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,1,24,24,8,57,Assign1,,internal,checking,least_important_label = important_features[-1][0]
631,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,5,4,4,0,19,Call1,head,revealing,checking,summary_data.head()
632,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,8,2,2,0,33,Call1,describe,revealing,checking,summary_data['season'].describe()
633,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,10,3,3,0,23,Call1,describe,revealing,checking,tourney_data.describe()
634,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,11,1,1,0,19,Call1,head,revealing,checking,tourney_data.head()
635,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,12,5,5,0,86,Assign1,,internal,checking,computer_rankings = computer_rankings[computer_rankings['season'] >= start_tournament]
636,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,12,5,5,20,86,Subscript1,,internal,enforcing,computer_rankings[computer_rankings['season'] >= start_tournament]
637,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,12,22,22,0,41,Call1,dropna,internal,enforcing,tourney_comp_ratings.dropna(inplace=True)
638,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,12,23,23,21,50,Call1,isnull,internal,checking,tourney_comp_ratings.isnull()
639,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,13,1,1,0,27,Call1,head,revealing,checking,tourney_comp_ratings.head()
640,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,14,1,1,0,31,Call1,describe,revealing,checking,tourney_comp_ratings.describe()
641,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,15,12,12,33,73,Call1,astype,internal,enforcing,tourney_comp_ratings[item].astype(float)
642,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,16,2,2,15,59,Call1,copy,internal,checking,tourney_comp_ratings[feature_columns].copy()
643,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,16,3,3,0,19,Call1,head,revealing,checking,feature_data.head()
644,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,17,1,1,0,59,Assign1,,internal,checking,X= feature_data[feature_data['season_t']<= stop_tournament]
645,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,17,1,1,3,59,Subscript1,,internal,enforcing,feature_data[feature_data['season_t']<= stop_tournament]
646,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,17,2,2,0,24,Call1,describe,revealing,checking,X['season_t'].describe()
647,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,18,1,1,0,89,Assign1,,internal,checking,y=tourney_comp_ratings[tourney_comp_ratings['season_t']<= stop_tournament]['game_result']
648,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,18,1,1,2,74,Subscript1,,internal,enforcing,tourney_comp_ratings[tourney_comp_ratings['season_t']<= stop_tournament]
649,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,18,2,2,3,31,Call1,drop,internal,enforcing,X.drop(columns=['season_t'])
650,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,18,5,5,0,12,Expr1,,revealing,checking,feature_list
651,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,19,2,2,10,24,Call1,copy,internal,checking,X_train.copy()
652,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,19,3,3,9,22,Call1,copy,internal,checking,X_test.copy()
653,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,19,4,4,0,20,Call2,shape,revealing,checking,print(X_train.shape)
654,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,19,5,5,0,20,Call2,shape,revealing,checking,print(y_train.shape)
655,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,19,6,6,0,19,Call2,shape,revealing,checking,print(X_test.shape)
656,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,19,7,7,0,19,Call2,shape,revealing,checking,print(y_test.shape)
657,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,19,8,8,0,14,Call1,head,revealing,checking,X_train.head()
658,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,22,1,1,0,14,Call1,head,revealing,checking,X_train.head()
659,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,30,1,1,9,17,Call1,copy,internal,checking,X.copy()
660,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,30,17,17,13,42,Call1,mean,internal,checking,"np.mean(train_scores, axis=1)"
661,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,30,18,18,12,40,Call1,std,internal,checking,"np.std(train_scores, axis=1)"
662,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,30,21,21,12,40,Call1,mean,internal,checking,"np.mean(test_scores, axis=1)"
663,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,30,22,22,11,38,Call1,std,internal,checking,"np.std(test_scores, axis=1)"
664,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,31,2,2,6,19,Call1,mean,internal,checking,scores.mean()
665,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,34,5,5,4,32,Assign1,,internal,checking,accuracy = value['accuracy']
666,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,34,6,6,4,41,Assign1,,internal,checking,cross_val = value['cross_validation']
667,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,34,7,7,4,36,Assign1,,internal,checking,log_loss_val = value['log_loss']
668,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,35,1,1,0,49,Assign1,,internal,checking,model_features =model_stats[cross_hash]['labels']
669,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,36,4,4,0,22,Expr1,,revealing,checking,numeric_model_features
670,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,37,3,3,0,16,Expr1,,revealing,checking,dropped_features
671,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,38,1,1,10,34,Call1,copy,internal,checking,X[model_features].copy()
672,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,38,3,3,10,24,Call1,copy,internal,checking,X_train.copy()
673,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,38,4,4,9,22,Call1,copy,internal,checking,X_test.copy()
674,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,38,5,5,0,20,Call2,shape,revealing,checking,print(X_train.shape)
675,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,38,6,6,0,20,Call2,shape,revealing,checking,print(y_train.shape)
676,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,38,7,7,0,19,Call2,shape,revealing,checking,print(X_test.shape)
677,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,38,8,8,0,19,Call2,shape,revealing,checking,print(y_test.shape)
678,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,38,21,21,27,50,Call1,mean,internal,checking,cross_val_scores.mean()
679,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,40,1,1,0,18,Expr1,,revealing,checking,missed_predictions
680,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,41,1,1,0,91,Assign1,,internal,checking,"plot_missed_predictions_df = missed_predictions[['game_index','features','model_features']]"
681,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,43,1,1,0,57,Subscript1,,internal,enforcing,missed_predictions[missed_predictions['game_index']==201]
682,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,45,4,4,15,73,Call1,copy,internal,checking,feature_data[feature_data['season_t'] == test_year].copy()
683,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,45,4,4,15,66,Subscript1,,internal,enforcing,feature_data[feature_data['season_t'] == test_year]
684,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,45,6,6,0,19,Call1,head,revealing,checking,feature_copy.head()
685,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,46,3,3,0,19,Call1,head,revealing,checking,feature_copy.head()
686,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,47,1,1,0,39,Assign1,,internal,checking,X_season = feature_copy[model_features]
687,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,47,3,3,0,92,Assign1,,internal,checking,y_season = tourney_comp_ratings[tourney_comp_ratings['season_t']== test_year]['game_result']
688,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,47,3,3,11,77,Subscript1,,internal,enforcing,tourney_comp_ratings[tourney_comp_ratings['season_t']== test_year]
689,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,47,4,4,0,14,Expr3,shape,revealing,checking,X_season.shape
690,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,51,1,1,0,18,Expr1,,revealing,checking,missed_predictions
691,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,52,1,1,0,91,Assign1,,internal,checking,"plot_missed_predictions_df = missed_predictions[['game_index','features','model_features']]"
692,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,53,1,1,0,58,Subscript1,,internal,enforcing,missed_predictions[missed_predictions['game_index']==1024]
693,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,54,4,4,0,15,Expr1,,revealing,checking,log_loss_result
694,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,57,1,1,0,13,Expr1,,revealing,checking,y_pred_season
695,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,58,1,1,16,92,Call1,copy,internal,checking,tourney_comp_ratings[tourney_comp_ratings.index.isin(X_season.index)].copy()
696,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,58,1,1,37,84,Call2,index,internal,checking,tourney_comp_ratings.index.isin(X_season.index)
697,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,58,2,2,0,13,Expr1,,revealing,checking,tourney_games
698,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,59,1,1,0,42,Assign2,,internal,enforcing,tourney_games['predicted'] = y_pred_season
699,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,59,2,2,0,20,Call1,head,revealing,checking,tourney_games.head()
700,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,60,4,4,0,57,Assign1,,internal,checking,predictions_counter_seed = tourney_games[cond_1 | cond_2]
701,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,60,5,5,0,118,Expr2,,revealing,checking,"predictions_counter_seed[['round','seed_t','team_t','seed_o','team_o','game_result','predicted','win_pts','lose_pts']]"
702,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,61,2,2,0,135,Assign1,,internal,checking,correct_counter_predictions = predictions_counter_seed[predictions_counter_seed['game_result']== predictions_counter_seed['predicted']]
703,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,61,2,2,30,135,Subscript1,,internal,enforcing,predictions_counter_seed[predictions_counter_seed['game_result']== predictions_counter_seed['predicted']]
704,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,61,3,3,0,121,Expr2,,revealing,checking,"correct_counter_predictions[['round','seed_t','team_t','seed_o','team_o','game_result','predicted','win_pts','lose_pts']]"
705,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,62,2,2,0,134,Assign1,,internal,checking,wrong_counter_predictions = predictions_counter_seed[predictions_counter_seed['game_result'] != predictions_counter_seed['predicted']]
706,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,62,2,2,28,134,Subscript1,,internal,enforcing,predictions_counter_seed[predictions_counter_seed['game_result'] != predictions_counter_seed['predicted']]
707,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,62,3,3,0,119,Expr2,,revealing,checking,"wrong_counter_predictions[['round','seed_t','team_t','seed_o','team_o','game_result','predicted','win_pts','lose_pts']]"
708,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,63,1,1,46,81,Call2,index,internal,checking,len(predictions_counter_seed.index)
709,Tournament_Model_LR-Delta_No_Opp_Stats.ipynb,63,2,2,54,92,Call2,index,internal,checking,len(correct_counter_predictions.index)
710,Sessions Analysis.ipynb,0,2,2,11,29,Call1,fillna,internal,enforcing,sessions.fillna(0)
711,Sessions Analysis.ipynb,0,5,5,0,48,Assign2,,internal,enforcing,sessions['date'] = pd.to_datetime(sessions.date)
712,Sessions Analysis.ipynb,1,1,1,0,16,Expr3,columns,revealing,checking,sessions.columns
713,Sessions Analysis.ipynb,3,1,1,9,43,Call1,apply,internal,enforcing,"sessions.apply(calc_score, axis=1)"
714,Sessions Analysis.ipynb,3,2,2,19,64,Call1,apply,internal,enforcing,"sessions.apply(calc_hangboard_scores, axis=1)"
715,Sessions Analysis.ipynb,3,3,3,13,52,Call1,apply,internal,enforcing,"sessions.apply(calc_gym_scores, axis=1)"
716,Sessions Analysis.ipynb,3,4,4,18,62,Call1,apply,internal,enforcing,"sessions.apply(calc_climbing_scores, axis=1)"
717,Sessions Analysis.ipynb,3,5,5,13,52,Call1,apply,internal,enforcing,"sessions.apply(calc_arc_scores, axis=1)"
718,Sessions Analysis.ipynb,3,6,6,14,59,Call1,apply,internal,enforcing,"sessions.apply(calc_technique_scores, axis=1)"
719,Sessions Analysis.ipynb,3,7,7,15,56,Call1,apply,internal,enforcing,"sessions.apply(calc_power_scores, axis=1)"
720,Sessions Analysis.ipynb,3,8,8,14,54,Call1,apply,internal,enforcing,"sessions.apply(calc_yoga_scores, axis=1)"
721,Sessions Analysis.ipynb,3,10,10,0,27,Assign2,,internal,enforcing,sessions['scores'] = scores
722,Sessions Analysis.ipynb,3,11,11,0,42,Assign2,,internal,enforcing,sessions['hang_scores'] = hangboard_scores
723,Sessions Analysis.ipynb,3,12,12,0,35,Assign2,,internal,enforcing,sessions['gym_scores'] = gym_scores
724,Sessions Analysis.ipynb,3,13,13,0,45,Assign2,,internal,enforcing,sessions['climbing_scores'] = climbing_scores
725,Sessions Analysis.ipynb,3,14,14,0,35,Assign2,,internal,enforcing,sessions['arc_scores'] = arc_scores
726,Sessions Analysis.ipynb,3,15,15,0,37,Assign2,,internal,enforcing,sessions['tech_scores'] = tech_scores
727,Sessions Analysis.ipynb,3,16,16,0,39,Assign2,,internal,enforcing,sessions['power_scores'] = power_scores
728,Sessions Analysis.ipynb,3,17,17,0,37,Assign2,,internal,enforcing,sessions['yoga_scores'] = yoga_scores
729,Sessions Analysis.ipynb,4,1,1,0,46,Assign1,,internal,checking,doripa = sessions[sessions.monkey == 'doripa']
730,Sessions Analysis.ipynb,4,1,1,9,46,Subscript1,,internal,enforcing,sessions[sessions.monkey == 'doripa']
731,Sessions Analysis.ipynb,4,2,2,0,59,Assign1,,internal,checking,sunshine_sessions = sessions[sessions.monkey == 'sunshine']
732,Sessions Analysis.ipynb,4,2,2,20,59,Subscript1,,internal,enforcing,sessions[sessions.monkey == 'sunshine']
733,Sessions Analysis.ipynb,6,1,1,0,92,Expr2,,revealing,checking,"doripa.tail()[['climbing_scores', 'tech_scores', 'gym_scores', 'hang_scores', 'arc_scores']]"
734,Sessions Analysis.ipynb,6,1,1,0,13,Call1,tail,revealing,checking,doripa.tail()
735,Sessions Analysis.ipynb,8,1,1,0,91,Call1,max,internal,checking,"doripa[['climbing_scores', 'tech_scores', 'gym_scores', 'hang_scores', 'arc_scores']].max()"
736,Sessions Analysis.ipynb,10,1,1,0,24,Call1,tail,revealing,checking,sunshine_sessions.tail()
737,Sessions Analysis.ipynb,10,1,1,0,103,Expr2,,revealing,checking,"sunshine_sessions.tail()[['climbing_scores', 'tech_scores', 'gym_scores', 'hang_scores', 'arc_scores']]"
738,Sessions Analysis.ipynb,12,1,1,0,102,Call1,max,internal,checking,"sunshine_sessions[['climbing_scores', 'tech_scores', 'gym_scores', 'hang_scores', 'arc_scores']].max()"
739,Sessions Analysis.ipynb,13,6,6,4,35,Assign2,,internal,enforcing,athlete['additional_index'] = x
740,Sessions Analysis.ipynb,13,55,55,4,51,Assign1,,internal,checking,athlete_hang_scores = athlete[athlete.hang > 0]
741,Sessions Analysis.ipynb,13,55,55,26,51,Subscript1,,internal,enforcing,athlete[athlete.hang > 0]
742,Sessions Analysis.ipynb,13,56,56,4,57,Assign1,,internal,checking,athelete_gym_scores = athlete[athlete.gym_scores > 0]
743,Sessions Analysis.ipynb,13,56,56,26,57,Subscript1,,internal,enforcing,athlete[athlete.gym_scores > 0]
744,Sessions Analysis.ipynb,13,57,57,4,66,Assign1,,internal,checking,athlete_climbing_scores = athlete[athlete.climbing_scores > 0]
745,Sessions Analysis.ipynb,13,57,57,30,66,Subscript1,,internal,enforcing,athlete[athlete.climbing_scores > 0]
746,Sessions Analysis.ipynb,13,58,58,4,58,Assign1,,internal,checking,athlete_tech_scores = athlete[athlete.tech_scores > 0]
747,Sessions Analysis.ipynb,13,58,58,26,58,Subscript1,,internal,enforcing,athlete[athlete.tech_scores > 0]
748,Sessions Analysis.ipynb,17,2,2,4,29,Subscript1,,internal,enforcing,doripa[doripa.scores > 0]
749,Sessions Analysis.ipynb,17,3,3,4,38,Subscript1,,internal,enforcing,doripa[doripa.climbing_scores > 0]
750,Sessions Analysis.ipynb,17,5,5,4,34,Subscript1,,internal,enforcing,doripa[doripa.tech_scores > 0]
751,Sessions Analysis.ipynb,17,6,6,4,33,Subscript1,,internal,enforcing,doripa[doripa.gym_scores > 0]
752,Sessions Analysis.ipynb,17,7,7,4,33,Subscript1,,internal,enforcing,doripa[doripa.arc_scores > 0]
753,Sessions Analysis.ipynb,17,9,9,4,34,Subscript1,,internal,enforcing,doripa[doripa.hang_scores > 0]
754,Sessions Analysis.ipynb,20,2,2,4,51,Subscript1,,internal,enforcing,sunshine_sessions[sunshine_sessions.scores > 0]
755,Sessions Analysis.ipynb,20,3,3,4,60,Subscript1,,internal,enforcing,sunshine_sessions[sunshine_sessions.climbing_scores > 0]
756,Sessions Analysis.ipynb,20,5,5,4,56,Subscript1,,internal,enforcing,sunshine_sessions[sunshine_sessions.tech_scores > 0]
757,Sessions Analysis.ipynb,20,6,6,4,55,Subscript1,,internal,enforcing,sunshine_sessions[sunshine_sessions.gym_scores > 0]
758,Sessions Analysis.ipynb,20,7,7,4,55,Subscript1,,internal,enforcing,sunshine_sessions[sunshine_sessions.arc_scores > 0]
759,Sessions Analysis.ipynb,20,9,9,4,56,Subscript1,,internal,enforcing,sunshine_sessions[sunshine_sessions.hang_scores > 0]
760,Sessions Analysis.ipynb,27,1,1,0,37,Call1,sort_values,internal,enforcing,doripa.corr()['scores'].sort_values()
761,DataAccessExamples.ipynb,1,8,8,0,39,Subscript1,,internal,enforcing,teams_all[teams_all.name== 'Boise St.']
762,DataAccessExamples.ipynb,3,6,6,0,9,Expr1,,revealing,checking,games_all
763,DataAccessExamples.ipynb,4,14,14,4,24,Assign2,,internal,enforcing,fts['value'] = value
764,DataAccessExamples.ipynb,4,15,15,4,62,Assign1,,internal,checking,fts = fts[(fts.name_1.notnull()) & (fts.name_2.notnull())]
765,DataAccessExamples.ipynb,4,22,22,17,52,Call1,concat,internal,enforcing,"pd.concat([features_1, features_2])"
766,DataAccessExamples.ipynb,4,23,23,0,85,Call1,drop,internal,enforcing,"features_total.drop(['team1','team2','year','name_1','name_2'], inplace=True, axis=1)"
767,DataAccessExamples.ipynb,4,28,28,0,37,Assign1,,internal,checking,features_total = features_total[cols]
768,DataAccessExamples.ipynb,5,3,3,4,64,Assign1,,internal,checking,t_A_fts = teams[(teams.name==team_a) & (teams.year == year)]
769,DataAccessExamples.ipynb,5,4,4,4,64,Assign1,,internal,checking,t_B_fts = teams[(teams.name==team_b) & (teams.year == year)]
770,DataAccessExamples.ipynb,5,7,7,4,62,Call1,drop,internal,enforcing,"fts.drop(['name_1','name_2','year'], inplace=True, axis=1)"
771,DataAccessExamples.ipynb,5,11,11,0,2,Expr1,,revealing,checking,fs
772,DataAccessExamples.ipynb,7,30,30,12,58,Assign1,,internal,checking,"teams.ix[teams.name==team[0],'name'] = team[1]"
773,DataAccessExamples.ipynb,7,40,40,8,19,Assign1,,internal,checking,temp = t[0]
774,DataAccessExamples.ipynb,7,41,41,8,19,Assign1,,internal,checking,t[0] = t[1]
775,DataAccessExamples.ipynb,7,49,49,39,74,Subscript1,,internal,enforcing,kag_seeds[kag_seeds.season==season]
776,DataAccessExamples.ipynb,7,54,54,27,50,Subscript1,,internal,enforcing,teams[teams.year==year]
777,DataAccessExamples.ipynb,7,60,60,4,71,Assign1,,internal,checking,"wt = kag_results.ix[kag_results.season==season, ['wteam', 'lteam']]"
778,DataAccessExamples.ipynb,7,61,61,4,50,Assign2,,internal,enforcing,wt['result'] = [checker(t) for t in wt.values]
779,DataAccessExamples.ipynb,10,4,4,4,40,Assign1,,internal,checking,res = results[results.res.notnull()]
780,DataAccessExamples.ipynb,11,5,5,0,2,Expr1,,revealing,checking,ll
781,Clustering.ipynb,0,13,13,0,140,Assign2,,internal,enforcing,"df[""DayDiff""] = DataFrame([get_datetime(val) for val in df[""Checkin Date""]]) - DataFrame([get_datetime(val) for val in df[""Snapshot Date""]])"
782,Clustering.ipynb,0,14,14,0,86,Assign2,,internal,enforcing,"df[""WeekDay""] = DataFrame([get_datetime(val).weekday() for val in df[""Checkin Date""]])"
783,Clustering.ipynb,0,15,15,0,64,Assign2,,internal,enforcing,"df[""DiscountDiff""] = df[""Original Price""] - df[""Discount Price""]"
784,Clustering.ipynb,0,16,16,0,68,Assign2,,internal,enforcing,"df[""DiscountPerc""] = (df[""DiscountDiff""]/df[""Original Price""]) * 100"
785,Clustering.ipynb,0,18,18,0,2,Expr1,,revealing,checking,df
786,Clustering.ipynb,2,2,2,0,77,Assign2,,internal,enforcing,"df[""Hotel_Count""] = df.groupby('Hotel Name')['Hotel Name'].transform('count')"
787,Clustering.ipynb,2,3,3,20,84,Call1,reset_index,internal,enforcing,"df.sort_values(by=['Hotel_Count'],ascending=False).reset_index()"
788,Clustering.ipynb,2,3,3,20,70,Call1,sort_values,internal,enforcing,"df.sort_values(by=['Hotel_Count'],ascending=False)"
789,Clustering.ipynb,2,6,6,0,58,Assign1,,internal,checking,"df_hotels = descending_hotels[""Hotel Name""].unique()[:150]"
790,Clustering.ipynb,2,6,6,12,52,Call1,unique,internal,checking,"descending_hotels[""Hotel Name""].unique()"
791,Clustering.ipynb,2,7,7,0,87,Assign1,,internal,checking,most_common_hotels = descending_hotels[descending_hotels['Hotel Name'].isin(df_hotels)]
792,Clustering.ipynb,4,2,2,0,115,Assign2,,internal,enforcing,"most_common_hotels[""Checkin_Count""] = most_common_hotels.groupby('Checkin Date')['Checkin Date'].transform('count')"
793,Clustering.ipynb,4,3,3,32,114,Call1,reset_index,internal,enforcing,"most_common_hotels.sort_values(by=['Checkin_Count'],ascending=False).reset_index()"
794,Clustering.ipynb,4,3,3,32,100,Call1,sort_values,internal,enforcing,"most_common_hotels.sort_values(by=['Checkin_Count'],ascending=False)"
795,Clustering.ipynb,4,6,6,0,82,Assign1,,internal,checking,"common_checkins_list = descending_most_common_hotels[""Checkin Date""].unique()[:40]"
796,Clustering.ipynb,4,6,6,23,77,Call1,unique,internal,checking,"descending_most_common_hotels[""Checkin Date""].unique()"
797,Clustering.ipynb,4,7,7,0,119,Assign1,,internal,checking,most_checkins = descending_most_common_hotels[descending_most_common_hotels['Checkin Date'].isin(common_checkins_list)]
798,Clustering.ipynb,6,1,1,22,58,Call1,unique,internal,checking,"most_checkins[""Hotel Name""].unique()"
799,Clustering.ipynb,6,2,2,19,57,Call1,unique,internal,checking,"most_checkins[""Checkin Date""].unique()"
800,Clustering.ipynb,8,2,2,0,136,Assign2,,internal,enforcing,"most_checkins[""Discount Price""]= most_checkins.groupby(['Hotel Name','Checkin Date','Discount Code'])[""Discount Price""].transform('min')"
801,Clustering.ipynb,8,3,3,0,97,Call1,drop_duplicates,internal,enforcing,"most_checkins.drop_duplicates(subset=[""Hotel Name"",""Checkin Date"",""Discount Code""], inplace=True)"
802,Clustering.ipynb,8,4,4,0,103,Call1,sort_values,internal,enforcing,"most_checkins.sort_values(by=[""Hotel Name"",""Checkin Date"",""Discount Code""],ascending=True,inplace=True)"
803,Clustering.ipynb,8,5,5,0,70,Call1,replace,internal,enforcing,"most_checkins['Discount Price'].replace(sys.maxsize, -1, inplace=True)"
804,Clustering.ipynb,8,8,8,25,116,Call1,reset_index,internal,enforcing,"most_checkins[[""Hotel Name"",""Checkin Date"",""Discount Code"",""Discount Price""]].reset_index()"
805,Clustering.ipynb,10,2,2,0,90,Assign1,,internal,checking,discount_filtered = checkin_hotel_discount[checkin_hotel_discount['Discount Price'] > -1 ]
806,Clustering.ipynb,10,2,2,20,90,Subscript1,,internal,enforcing,checkin_hotel_discount[checkin_hotel_discount['Discount Price'] > -1 ]
807,Clustering.ipynb,10,11,11,0,85,Assign1,,internal,checking,discount_filtered_grouped = discount_filtered.groupby('Hotel Name')['Discount Price']
808,Clustering.ipynb,10,12,12,0,81,Assign2,,internal,enforcing,"discount_filtered[""Normal""] = discount_filtered_grouped.transform(normalize_data)"
809,Clustering.ipynb,10,14,14,0,88,Assign1,,internal,checking,discount_synth = checkin_hotel_discount[checkin_hotel_discount['Discount Price'] == -1 ]
810,Clustering.ipynb,10,14,14,17,88,Subscript1,,internal,enforcing,checkin_hotel_discount[checkin_hotel_discount['Discount Price'] == -1 ]
811,Clustering.ipynb,10,15,15,0,29,Assign2,,internal,enforcing,"discount_synth[""Normal""] = -1"
812,Clustering.ipynb,10,19,19,0,106,Call1,sort_values,internal,enforcing,"normal_dataFrame.sort_values(by=[""Hotel Name"",""Checkin Date"",""Discount Code""],ascending=True,inplace=True)"
813,Clustering.ipynb,10,20,20,0,16,Expr1,,revealing,checking,normal_dataFrame
814,Clustering.ipynb,14,8,8,0,27,Assign1,,internal,checking,"labels = vector.values[:,0]"
815,Clustering.ipynb,14,9,9,0,29,Assign1,,internal,checking,"data = vector.values[:,1:160]"
816,Clustering.ipynb,16,9,9,0,28,Assign2,,internal,enforcing,"hotels[""cluster""] = clusters"
817,Clustering.ipynb,16,10,10,0,30,Assign1,,internal,checking,"hotels = hotels[[0,""cluster""]]"
818,Clustering.ipynb,16,11,11,0,62,Call1,sort_values,internal,enforcing,"hotels.sort_values(by=[""cluster""],ascending=True,inplace=True)"
819,Clustering.ipynb,16,13,13,0,65,Assign2,,internal,enforcing,"hotels[""Count""] = hotels.groupby(""cluster"")[0].transform(""count"")"
820,Clustering.ipynb,16,14,14,0,6,Expr1,,revealing,checking,hotels
