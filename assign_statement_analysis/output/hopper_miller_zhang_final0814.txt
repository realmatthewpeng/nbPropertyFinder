Total number of lines found: 0


Incorrect Lines:


Precision = 0
Recall = 0.0

data['OutcomeSubtype'] = data['OutcomeSubtype'].fillna('')
data['PitBull'] = data.Breed.apply(pit_bull)
data['Named'] = data.Name.apply(naming)
data['MixedBreed'] = data.Breed.apply(mixed_breed)
data['TopBreed'] = data.Breed.apply(top_breed)
breeds = pd.read_csv('../data/breeds.csv')
data['Female'] = 'Female' in data['SexuponOutcome']
data['BreedRank'] = data.Breed.apply(breed_rank)
data['ConvertedAge']=data['AgeuponOutcome'].apply(ageConvert)
data = pd.read_csv('../data/train.csv')
data['OrderedBreed'] = data.Breed.apply(reorder)
breeds['Breed'] = breeds['Breed'].str.strip()
data['Intact'] = data.SexuponOutcome.apply(intact)
data['OrderedColor'] = data.Color.apply(reorder)
data['BlackCat'] = data.Color.apply(black_cat)
data['Female'] = data.SexuponOutcome.apply(female)
X_dev[continuous] = ss.transform(X_dev[continuous])
X_train, X_dev, y_train, y_dev = train_test_split(X, y, random_state=2)
X_train[continuous] = ss.transform(X_train[continuous])  # Use that mean and std to normalize columns of training data
data["ConvertedAge"] = data.groupby("AnimalType").transform(lambda x: x.fillna(x.median()))
X = data2[predictors]
data2 = pd.concat([data[target], data[continuous], pd.get_dummies(data[discrete])], axis=1)
y = data2[[target]]
animal_type = data['AnimalType'].value_counts()
outcome_type = data['OutcomeType'].value_counts()
X_dog_train, X_dog_dev, y_dog_train, y_dog_dev = train_test_split(X_dog, y_dog, random_state=2)
X_cat = data_cat[pred['cat']]
X_cat_train, X_cat_dev, y_cat_train, y_cat_dev = train_test_split(X_cat, y_cat, random_state=2)
X_dog = data_dog[pred['dog']]
y_cat = data_cat[[target]]
data_cat = data[data['AnimalType'] == 'Cat']
data_dog = data[data['AnimalType'] == 'Dog']
y_dog = data_dog[[target]]
data = X[self.cols]
X_train_feature = X_train
X_train_feature = X_train_feature.drop('Female_Unknown', 1)
X_dev_feature = X_dev_feature.drop('Intact_Unknown', 1)
X_dev_feature = X_dev_feature.drop('Female_Unknown', 1)
X_dev_feature = X_dev
X_train_feature = X_train_feature.drop('Intact_Unknown', 1)
X_dev_dog = X_dev_feature
X_dev_dog = X_dev_feature.drop('AnimalType_Dog', 1)
X_train_dog = X_train_feature.drop('AnimalType_Dog', 1)
X_train_dog = X_train_feature
X_dev_cat = X_dev_feature.drop('AnimalType_Cat', 1)
X_train_cat = X_train_feature.drop('AnimalType_Cat', 1)
X_train_cat = X_train_feature
X_dev_cat = X_dev_feature
