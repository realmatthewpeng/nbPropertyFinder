Total number of lines found: 18

os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'
X    = X - X.mean(0,keepdims=True)
idx        = np.argsort(val)[::-1]; val = val[idx]; vec = vec[:,idx]
idx        = np.argsort(val)[::-1]; val = val[idx]; vec = vec[:,idx]
val_reduced= val.copy()
vec_reduced[:,:1] = vec[:,:1]
idx        = np.argsort(val)[::-1]; val = val[idx]; vec = vec[:,idx]
inversed_vec  = inversed_vec - inversed_vec.mean(1)
idx        = np.argsort(val)[::-1]; val = val[idx]; vec = vec[:,idx]
inverse  = inverse - inverse*inverse.std(0,keepdims=True)
inverse  = inverse - inverse.mean(0,keepdims=True)
N     = K.shape[0]
new_pc_cen = new_pc - new_pc.mean(0,keepdims=True)
new_pc = eigvecs[:,-2:]
new_pc_cen = sparse_data - sparse_data.mean(0,keepdims=True)
self.lmbda = 1 / np.sqrt(np.max(self.D.shape))
print(S.shape)
print(L.shape)

Incorrect Lines:

os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'
idx        = np.argsort(val)[::-1]; val = val[idx]; vec = vec[:,idx]
idx        = np.argsort(val)[::-1]; val = val[idx]; vec = vec[:,idx]
val_reduced= val.copy()
vec_reduced[:,:1] = vec[:,:1]
idx        = np.argsort(val)[::-1]; val = val[idx]; vec = vec[:,idx]
inversed_vec  = inversed_vec - inversed_vec.mean(1)
idx        = np.argsort(val)[::-1]; val = val[idx]; vec = vec[:,idx]
inverse  = inverse - inverse*inverse.std(0,keepdims=True)
inverse  = inverse - inverse.mean(0,keepdims=True)
N     = K.shape[0]
new_pc_cen = new_pc - new_pc.mean(0,keepdims=True)
new_pc = eigvecs[:,-2:]
new_pc_cen = sparse_data - sparse_data.mean(0,keepdims=True)
self.lmbda = 1 / np.sqrt(np.max(self.D.shape))
print(S.shape)
print(L.shape)

Precision = 0.05555555555555555
Recall = 1.0

